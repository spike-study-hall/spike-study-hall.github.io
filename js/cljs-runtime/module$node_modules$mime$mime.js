shadow$provide.module$node_modules$mime$mime=function(global,require,module,exports){function Mime(){this.types=Object.create(null);this.extensions=Object.create(null)}var process=require("module$node_modules$process$browser");require("module$node_modules$path_browserify$index");var fs=require("shadow$empty");Mime.prototype.define=function(map){for(var type in map){for(var exts=map[type],i=0;i<exts.length;i++)process.env.DEBUG_MIME&&this.types[exts[i]]&&console.warn((this._loading||"define()").replace(/.*\//,
""),'changes "'+exts[i]+'" extension type from '+this.types[exts[i]]+" to "+type),this.types[exts[i]]=type;this.extensions[type]||(this.extensions[type]=exts[0])}};Mime.prototype.load=function(file){this._loading=file;var map={};fs.readFileSync(file,"ascii").split(/[\r\n]+/).forEach(function(line){line=line.replace(/\s*#.*|^\s*|\s*$/g,"").split(/\s+/);map[line.shift()]=line});this.define(map);this._loading=null};Mime.prototype.lookup=function(path,fallback){path=path.replace(/^.*[\.\/\\]/,"").toLowerCase();
return this.types[path]||fallback||this.default_type};Mime.prototype.extension=function(mimeType){mimeType=mimeType.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();return this.extensions[mimeType]};global=new Mime;global.define(require("module$node_modules$mime$types_json"));global.default_type=global.lookup("bin");global.Mime=Mime;global.charsets={lookup:function(mimeType,fallback){return/^text\/|^application\/(javascript|json)/.test(mimeType)?"UTF-8":fallback}};module.exports=global}
//# sourceMappingURL=module$node_modules$mime$mime.js.map
