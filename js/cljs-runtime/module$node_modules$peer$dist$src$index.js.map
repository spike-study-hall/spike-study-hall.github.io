{
"version":3,
"file":"module$node_modules$peer$dist$src$index.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAWpGC,QAASA,kBAAiB,CAACC,MAAD,CAASC,OAAT,CAAkB,CACxC,IAAMC,IAAMC,SAAAC,QAAA,EAAZ,CACMC,WAAaC,MAAAC,OAAA,CAAcD,MAAAC,OAAA,CAAc,EAAd,CAAkBC,QAAAJ,QAAlB,CAAd,CAAmDH,OAAnD,CACfI,WAAAI,QAAJ,EACIP,GAAAQ,IAAA,CAAQ,aAAR,CAA8C,OAAvB,GAAAL,UAAAI,QAAA,CAAiC,CAAA,CAAjC,CAAyC,CAAC,CAACJ,UAAAI,QAAlE,CAEJP,IAAAS,GAAA,CAAO,OAAP,CAAgB,QAAA,EAAM,CAClB,GAAI,CAACX,MAAL,CACI,KAAUY,MAAJ,CAAU,8DAAV,CAAN,CAGJC,UAAAC,eAAA,CAA0B,CAAEZ,IAAAA,GAAF,CAAOF,OAAAA,MAAP,CAAeC,QAASI,UAAxB,CAA1B,CALkB,CAAtB,CAOA;MAAOH,IAbiC,CATxCa,MAAAA,CAAmB,IAAnBA,EAA2B,IAAAA,gBAA3BA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAAC,WAAR,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEV,OAAAY,eAAA,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAAEqB,MAAO,CAAA,CAAT,CAA7C,CACA,KAAMhB,UAAYY,MAAA,CAAgBnB,OAAA,CAAQ,mCAAR,CAAhB,CAAlB,CACMwB,OAASL,MAAA,CAAgBnB,OAAA,CAAQ,uCAAR,CAAhB,CADf,CAEMyB,QAAUN,MAAA,CAAgBnB,OAAA,CAAQ,4CAAR,CAAhB,CAFhB,CAGMY,SAAWO,MAAA,CAAgBnB,OAAA,CAAQ,gDAAR,CAAhB,CAHjB,CAIMiB,WAAajB,OAAA,CAAQ,4CAAR,CAgBnBE;OAAAC,kBAAA,CAA4BA,iBAmB5BD,QAAAwB,WAAA,CAlBAA,QAAmB,CAACrB,OAAD,CAAesB,QAAf,CAAyB,CAAxBtB,OAAA,CAAA,IAAA,EAAA,GAAAA,OAAA,CAAU,EAAV,CAAAA,OAChB,KAAMC,IAAMC,SAAAC,QAAA,EAAZ,CACMC,WAAaC,MAAAC,OAAA,CAAcD,MAAAC,OAAA,CAAc,EAAd,CAAkBC,QAAAJ,QAAlB,CAAd,CAAmDH,OAAnD,CADnB,CAEMuB,KAAOnB,UAAAmB,KAEb,IAAInB,UAAAoB,IAAJ,EAAsBpB,UAAAoB,IAAAC,IAAtB,EAA4CrB,UAAAoB,IAAAE,KAA5C,CAAiE,CAC7D,IAAA3B,OAASqB,OAAAjB,QAAAwB,aAAA,CAA6B3B,OAAAwB,IAA7B,CAA0CvB,GAA1C,CAET,QAAOG,UAAAoB,IAHsD,CAAjE,IAMIzB,OAAA,CAASoB,MAAAhB,QAAAwB,aAAA,CAA4B1B,GAA5B,CAEP2B,QAAAA,CAAS9B,iBAAA,CAAkBC,MAAlB,CAA0BK,UAA1B,CACfH,IAAA4B,IAAA,CAAQD,OAAR,CACA7B,OAAA+B,OAAA,CAAcP,IAAd;AAAoB,QAAA,EAAM,CAAA,MAAa,KAAb,GAAAD,QAAA,EAAkC,IAAK,EAAvC,GAAqBA,QAArB,CAA2C,IAAK,EAAhD,CAAoDA,QAAA,CAASvB,MAAT,CAApD,CAA1B,CACA,OAAO6B,QAhBiC,CA3BwD;",
"sources":["node_modules/peer/dist/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$peer$dist$src$index\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst express_1 = __importDefault(require(\"express\"));\nconst http_1 = __importDefault(require(\"http\"));\nconst https_1 = __importDefault(require(\"https\"));\nconst config_1 = __importDefault(require(\"./config\"));\nconst instance_1 = require(\"./instance\");\nfunction ExpressPeerServer(server, options) {\n    const app = express_1.default();\n    const newOptions = Object.assign(Object.assign({}, config_1.default), options);\n    if (newOptions.proxied) {\n        app.set(\"trust proxy\", newOptions.proxied === \"false\" ? false : !!newOptions.proxied);\n    }\n    app.on(\"mount\", () => {\n        if (!server) {\n            throw new Error(\"Server is not passed to constructor - \" +\n                \"can't start PeerServer\");\n        }\n        instance_1.createInstance({ app, server, options: newOptions });\n    });\n    return app;\n}\nexports.ExpressPeerServer = ExpressPeerServer;\nfunction PeerServer(options = {}, callback) {\n    const app = express_1.default();\n    const newOptions = Object.assign(Object.assign({}, config_1.default), options);\n    const port = newOptions.port;\n    let server;\n    if (newOptions.ssl && newOptions.ssl.key && newOptions.ssl.cert) {\n        server = https_1.default.createServer(options.ssl, app);\n        // @ts-ignore\n        delete newOptions.ssl;\n    }\n    else {\n        server = http_1.default.createServer(app);\n    }\n    const peerjs = ExpressPeerServer(server, newOptions);\n    app.use(peerjs);\n    server.listen(port, () => callback === null || callback === void 0 ? void 0 : callback(server));\n    return peerjs;\n}\nexports.PeerServer = PeerServer;\n\n};"],
"names":["shadow$provide","global","require","module","exports","ExpressPeerServer","server","options","app","express_1","default","newOptions","Object","assign","config_1","proxied","set","on","Error","instance_1","createInstance","__importDefault","mod","__esModule","defineProperty","value","http_1","https_1","PeerServer","callback","port","ssl","key","cert","createServer","peerjs","use","listen"]
}
