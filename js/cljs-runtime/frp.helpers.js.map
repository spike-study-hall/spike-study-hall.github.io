{"version":3,"sources":["frp/helpers.cljc"],"mappings":";;AAGA,AAAKA,AACH,AAACC,AAAK,AAACC,AAAQC,AAAO,AAACF,AAAKG,AACAC,AACA,AAACH,AAAQI,AAAMC,AACrC,AAAA,AAAA,AAACC,AAAQC,AACTC","names":["frp.helpers/<=","cljs.core.comp.cljs$core$IFn$_invoke$arity$3","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/every?","cljs.core/not","cljs.core/pos?","cljs.core/apply","cljs.core/compare","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","cljs.core/partition","cljs.core/vector"],"sourcesContent":["(ns frp.helpers\n  (:refer-clojure :exclude [<=]))\n\n(def <=\n  (comp (partial every? (comp not\n                              pos?\n                              (partial apply compare)))\n        (partial partition 2 1)\n        vector))\n"]}