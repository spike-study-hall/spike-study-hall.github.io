{
"version":3,
"file":"module$node_modules$qs$lib$parse.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/qs/lib/parse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qs$lib$parse\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","has","Object","prototype","hasOwnProperty","defaults","allowDots","allowPrototypes","arrayLimit","charset","charsetSentinel","comma","decoder","decode","delimiter","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","str","replace","$0","numberStr","String","fromCharCode","parseInt","module.exports","opts","undefined","TypeError","Error","isRegExp","options","create","obj","parts","split","cleanStr","Infinity","limit","skipIndex","i","length","indexOf","isoSentinel","part","bracketEqualsPos","pos","key","val","slice","call","combine","keys","tempObj","givenKey","child","segment","brackets","exec","parent","index","push","chain","root","concat","leaf","cleanRoot","charAt","isNaN","merge","newObj","compact"]
}
