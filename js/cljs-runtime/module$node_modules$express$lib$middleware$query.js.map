{
"version":3,
"file":"module$node_modules$express$lib$middleware$query.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAe7G,IAAIC,MAAQH,OAAA,CAAQ,uCAAR,CAAZ,CACII,SAAWJ,OAAA,CAAQ,oCAAR,CADf,CAEIK,GAAKL,OAAA,CAAQ,kCAAR,CAQTC,OAAAC,QAAA,CAAiBI,QAAc,CAACC,OAAD,CAAU,CACvC,IAAIC,KAAOL,KAAA,CAAM,EAAN,CAAUI,OAAV,CAAX,CACIE,WAAaJ,EAAAK,MAEM,WAAvB,GAAI,MAAOH,QAAX,GACEE,UACA,CADaF,OACb,CAAAC,IAAA,CAAOG,IAAAA,EAFT,CAKaA,KAAAA,EAAb,GAAIH,IAAJ,EAAmDG,IAAAA,EAAnD,GAA0BH,IAAAI,gBAA1B,GAEEJ,IAAAI,gBAFF,CAEyB,CAAA,CAFzB,CAKA,OAAOC,SAAc,CAACC,GAAD,CAAMC,GAAN;AAAWC,IAAX,CAAgB,CAC9BF,GAAAD,MAAL,GACMI,GACJ,CADUb,QAAA,CAASU,GAAT,CAAAD,MACV,CAAAC,GAAAD,MAAA,CAAYJ,UAAA,CAAWQ,GAAX,CAAgBT,IAAhB,CAFd,CAKAQ,KAAA,EANmC,CAdE,CAzBoE;",
"sources":["node_modules/express/lib/middleware/query.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$express$lib$middleware$query\"] = function(global,require,module,exports) {\n/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","merge","parseUrl","qs","module.exports","options","opts","queryparse","parse","undefined","allowPrototypes","query","req","res","next","val"]
}
