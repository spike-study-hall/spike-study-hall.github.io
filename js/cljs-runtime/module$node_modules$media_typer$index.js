shadow$provide.module$node_modules$media_typer$index=function(global,require,module,exports){var paramRegExp=/; *([!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) *= *("(?:[ !\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u0020-\u007e])*"|[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) */g,textRegExp=/^[\u0020-\u007e\u0080-\u00ff]+$/,tokenRegExp=/^[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+$/,qescRegExp=/\\([\u0000-\u007f])/g,quoteRegExp=/([\\"])/g,subtypeNameRegExp=/^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/,typeNameRegExp=/^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/,
typeRegExp=/^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;exports.format=function(obj){if(!obj||"object"!==typeof obj)throw new TypeError("argument obj is required");var parameters=obj.parameters,subtype=obj.subtype,suffix=obj.suffix;obj=obj.type;if(!obj||!typeNameRegExp.test(obj))throw new TypeError("invalid type");if(!subtype||!subtypeNameRegExp.test(subtype))throw new TypeError("invalid subtype");obj=obj+"/"+subtype;if(suffix){if(!typeNameRegExp.test(suffix))throw new TypeError("invalid suffix");
obj+="+"+suffix}if(parameters&&"object"===typeof parameters)for(suffix=Object.keys(parameters).sort(),subtype=0;subtype<suffix.length;subtype++){var param=suffix[subtype];if(!tokenRegExp.test(param))throw new TypeError("invalid parameter name");var JSCompiler_temp_const="; "+param+"\x3d";param=String(parameters[param]);if(!tokenRegExp.test(param)){if(0<param.length&&!textRegExp.test(param))throw new TypeError("invalid parameter value");param='"'+param.replace(quoteRegExp,"\\$1")+'"'}obj+=JSCompiler_temp_const+
param}return obj};exports.parse=function(string){if(!string)throw new TypeError("argument string is required");"object"===typeof string&&(string="function"===typeof string.getHeader?string.getHeader("content-type"):"object"===typeof string.headers?string.headers&&string.headers["content-type"]:void 0);if("string"!==typeof string)throw new TypeError("argument string is required to be a string");var index=string.indexOf(";"),type=-1!==index?string.substr(0,index):string,match=typeRegExp.exec(type.toLowerCase());
if(!match)throw new TypeError("invalid media type");type=match[1];match=match[2];var match$jscomp$0=match.lastIndexOf("+");if(-1!==match$jscomp$0){var key=match.substr(match$jscomp$0+1);match=match.substr(0,match$jscomp$0)}type={type:type,subtype:match,suffix:key};match={};for(paramRegExp.lastIndex=index;match$jscomp$0=paramRegExp.exec(string);){if(match$jscomp$0.index!==index)throw new TypeError("invalid parameter format");index+=match$jscomp$0[0].length;key=match$jscomp$0[1].toLowerCase();match$jscomp$0=
match$jscomp$0[2];'"'===match$jscomp$0[0]&&(match$jscomp$0=match$jscomp$0.substr(1,match$jscomp$0.length-2).replace(qescRegExp,"$1"));match[key]=match$jscomp$0}if(-1!==index&&index!==string.length)throw new TypeError("invalid parameter format");type.parameters=match;return type}}
//# sourceMappingURL=module$node_modules$media_typer$index.js.map
