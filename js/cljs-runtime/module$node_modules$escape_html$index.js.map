{
"version":3,
"file":"module$node_modules$escape_html$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBlG,IAAIC,gBAAkB,SAOtBF,OAAAC,QAAA,CAUAE,QAAmB,CAACC,MAAD,CAAS,CACtBC,MAAAA,CAAM,EAANA,CAAWD,MACf,KAAIE,MAAQJ,eAAAK,KAAA,CAAqBF,MAArB,CAEZ,IAAI,CAACC,KAAL,CACE,MAAOD,OAIT,KAAIG,KAAO,EAAX,CACIC,KADJ,CAEIC,UAAY,CAEhB,KAAKD,KAAL,CAAaH,KAAAG,MAAb,CAA0BA,KAA1B,CAAkCJ,MAAAM,OAAlC,CAA8CF,KAAA,EAA9C,CAAuD,CACrD,OAAQJ,MAAAO,WAAA,CAAeH,KAAf,CAAR,EACE,KAAK,EAAL,CACEI,KAAA,CAAS,WACT,MACF,MAAK,EAAL,CACEA,KAAA,CAAS,UACT,MACF,MAAK,EAAL,CACEA,KAAA,CAAS,UACT,MACF,MAAK,EAAL,CACEA,KAAA,CAAS,SACT,MACF,MAAK,EAAL,CACEA,KAAA,CAAS,SACT,MACF;QACE,QAjBJ,CAoBIH,SAAJ,GAAkBD,KAAlB,GACED,IADF,EACUH,MAAAS,UAAA,CAAcJ,SAAd,CAAyBD,KAAzB,CADV,CAIAC,UAAA,CAAYD,KAAZ,CAAoB,CACpBD,KAAA,EAAQK,KA1B6C,CA6BvD,MAAOH,UAAA,GAAcD,KAAd,CACHD,IADG,CACIH,MAAAS,UAAA,CAAcJ,SAAd,CAAyBD,KAAzB,CADJ,CAEHD,IA5CsB,CAjCsE;",
"sources":["node_modules/escape-html/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$escape_html$index\"] = function(global,require,module,exports) {\n/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","matchHtmlRegExp","escapeHtml","string","str","match","exec","html","index","lastIndex","length","charCodeAt","escape","substring"]
}
