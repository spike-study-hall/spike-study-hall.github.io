shadow$provide.module$node_modules$range_parser$index=function(global,require,module,exports){function mapWithIndex(range,index){return{start:range.start,end:range.end,index:index}}function mapWithoutIndex(range){return{start:range.start,end:range.end}}function sortByRangeIndex(a,b){return a.index-b.index}function sortByRangeStart(a,b){return a.start-b.start}module.exports=function(size,str,options){if("string"!==typeof str)throw new TypeError("argument str must be a string");var index=str.indexOf("\x3d");
if(-1===index)return-2;var arr=str.slice(index+1).split(","),ranges=[];ranges.type=str.slice(0,index);for(str=0;str<arr.length;str++){var range=arr[str].split("-");index=parseInt(range[0],10);range=parseInt(range[1],10);isNaN(index)?(index=size-range,range=size-1):isNaN(range)&&(range=size-1);range>size-1&&(range=size-1);isNaN(index)||isNaN(range)||index>range||0>index||ranges.push({start:index,end:range})}if(1>ranges.length)return-1;if(options&&options.combine){size=ranges.map(mapWithIndex).sort(sortByRangeStart);
options=0;for(arr=1;arr<size.length;arr++)str=size[arr],index=size[options],str.start>index.end+1?size[++options]=str:str.end>index.end&&(index.end=str.end,index.index=Math.min(index.index,str.index));size.length=options+1;size=size.sort(sortByRangeIndex).map(mapWithoutIndex);size.type=ranges.type;ranges=size}return ranges}}
//# sourceMappingURL=module$node_modules$range_parser$index.js.map
