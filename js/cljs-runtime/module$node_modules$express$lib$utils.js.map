{
"version":3,
"file":"module$node_modules$express$lib$utils.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/express/lib/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$express$lib$utils\"] = function(global,require,module,exports) {\n/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","createETagGenerator","options","generateETag","body","encoding","buf","Buffer","isBuffer","from","etag","parseExtendedQueryString","str","qs","parse","allowPrototypes","newObject","contentDisposition","contentType","deprecate","flatten","mime","proxyaddr","querystring","weak","wetag","isAbsolute","exports.isAbsolute","path","substring","function","normalizeType","exports.normalizeType","type","indexOf","parts","split","ret","value","quality","params","originalIndex","index","i","length","pms","parseFloat","normalizeTypes","exports.normalizeTypes","types","push","compileETag","exports.compileETag","val","fn","TypeError","compileQueryParser","exports.compileQueryParser","compileTrust","exports.compileTrust","a","compile","setCharset","exports.setCharset","charset","parsed","parameters","format"]
}
