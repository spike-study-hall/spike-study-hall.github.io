shadow$provide.module$node_modules$negotiator$lib$charset=function(global,require,module,exports){function parseAcceptCharset(accept){accept=accept.split(",");for(var i=0,j=0;i<accept.length;i++){var str=accept[i].trim();var charset=i;var match=simpleCharsetRegExp.exec(str);if(match){str=match[1];var q=1;if(match[2]){match=match[2].split(";");for(var j$jscomp$0=0;j$jscomp$0<match.length;j$jscomp$0++){var p=match[j$jscomp$0].trim().split("\x3d");if("q"===p[0]){q=parseFloat(p[1]);break}}}charset={charset:str,
q:q,i:charset}}else charset=null;charset&&(accept[j++]=charset)}accept.length=j;return accept}function preferredCharsets(accept,provided){var accepts=parseAcceptCharset(void 0===accept?"*":accept||"");if(!provided)return accepts.filter(isQuality).sort(compareSpecs).map(getFullCharset);var priorities=provided.map(function(type,index$jscomp$0){for(var priority={o:-1,q:0,s:0},i=0;i<accepts.length;i++){a:{var spec=type;var spec$jscomp$0=accepts[i],index=index$jscomp$0,s=0;if(spec$jscomp$0.charset.toLowerCase()===
spec.toLowerCase())s|=1;else if("*"!==spec$jscomp$0.charset){spec=null;break a}spec={i:index,o:spec$jscomp$0.i,q:spec$jscomp$0.q,s:s}}spec&&0>(priority.s-spec.s||priority.q-spec.q||priority.o-spec.o)&&(priority=spec)}return priority});return priorities.filter(isQuality).sort(compareSpecs).map(function(priority){return provided[priorities.indexOf(priority)]})}function compareSpecs(a,b){return b.q-a.q||b.s-a.s||a.o-b.o||a.i-b.i||0}function getFullCharset(spec){return spec.charset}function isQuality(spec){return 0<
spec.q}module.exports=preferredCharsets;module.exports.preferredCharsets=preferredCharsets;var simpleCharsetRegExp=/^\s*([^\s;]+)\s*(?:;(.*))?$/}
//# sourceMappingURL=module$node_modules$negotiator$lib$charset.js.map
