{
"version":3,
"file":"module$node_modules$toidentifier$index.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGD,MAAAC,QAAA,CAUAC,QAAsB,CAACC,GAAD,CAAM,CAC1B,MAAOA,IAAAC,MAAA,CACE,GADF,CAAAC,IAAA,CAEA,QAAS,CAACC,KAAD,CAAQ,CACpB,MAAOA,MAAAC,MAAA,CAAY,CAAZ,CAAe,CAAf,CAAAC,YAAA,EAAP,CAAyCF,KAAAC,MAAA,CAAY,CAAZ,CADrB,CAFjB,CAAAE,KAAA,CAKC,EALD,CAAAC,QAAA,CAMI,eANJ,CAMqB,EANrB,CADmB,CAtBuE;",
"sources":["node_modules/toidentifier/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$toidentifier$index\"] = function(global,require,module,exports) {\n/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","toIdentifier","str","split","map","token","slice","toUpperCase","join","replace"]
}
