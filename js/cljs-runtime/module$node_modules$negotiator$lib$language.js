shadow$provide.module$node_modules$negotiator$lib$language=function(global,require,module,exports){function parseAcceptLanguage(accept){accept=accept.split(",");for(var i=0,j=0;i<accept.length;i++){var language=parseLanguage(accept[i].trim(),i);language&&(accept[j++]=language)}accept.length=j;return accept}function parseLanguage(str,i){var match=simpleLanguageRegExp.exec(str);if(!match)return null;str=match[1];var suffix=match[2],full=str;suffix&&(full+="-"+suffix);var q=1;if(match[3]){match=match[3].split(";");
for(var j=0;j<match.length;j++){var p=match[j].split("\x3d");"q"===p[0]&&(q=parseFloat(p[1]))}}return{prefix:str,suffix:suffix,q:q,i:i,full:full}}function preferredLanguages(accept,provided){var accepts=parseAcceptLanguage(void 0===accept?"*":accept||"");if(!provided)return accepts.filter(isQuality).sort(compareSpecs).map(getFullLanguage);var priorities=provided.map(function(type,index$jscomp$0){for(var priority={o:-1,q:0,s:0},i=0;i<accepts.length;i++){a:{var spec=accepts[i];var index=index$jscomp$0,
p=parseLanguage(type);if(p){var s=0;if(spec.full.toLowerCase()===p.full.toLowerCase())s|=4;else if(spec.prefix.toLowerCase()===p.full.toLowerCase())s|=2;else if(spec.full.toLowerCase()===p.prefix.toLowerCase())s|=1;else if("*"!==spec.full){spec=null;break a}spec={i:index,o:spec.i,q:spec.q,s:s}}else spec=null}spec&&0>(priority.s-spec.s||priority.q-spec.q||priority.o-spec.o)&&(priority=spec)}return priority});return priorities.filter(isQuality).sort(compareSpecs).map(function(priority){return provided[priorities.indexOf(priority)]})}
function compareSpecs(a,b){return b.q-a.q||b.s-a.s||a.o-b.o||a.i-b.i||0}function getFullLanguage(spec){return spec.full}function isQuality(spec){return 0<spec.q}module.exports=preferredLanguages;module.exports.preferredLanguages=preferredLanguages;var simpleLanguageRegExp=/^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/}
//# sourceMappingURL=module$node_modules$negotiator$lib$language.js.map
