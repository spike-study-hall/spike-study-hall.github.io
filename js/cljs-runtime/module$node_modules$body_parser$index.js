shadow$provide.module$node_modules$body_parser$index=function(global,require,module,exports){function createParserGetter(name){return function(){var JSCompiler_inline_result=parsers[name];if(void 0===JSCompiler_inline_result){switch(name){case "json":JSCompiler_inline_result=require("module$node_modules$body_parser$lib$types$json");break;case "raw":JSCompiler_inline_result=require("module$node_modules$body_parser$lib$types$raw");break;case "text":JSCompiler_inline_result=require("module$node_modules$body_parser$lib$types$text");
break;case "urlencoded":JSCompiler_inline_result=require("module$node_modules$body_parser$lib$types$urlencoded")}JSCompiler_inline_result=parsers[name]=JSCompiler_inline_result}return JSCompiler_inline_result}}global=require("module$node_modules$depd$lib$browser$index")("body-parser");var parsers=Object.create(null);exports=module.exports=global.function(function(options){var opts={};if(options)for(var prop in options)"type"!==prop&&(opts[prop]=options[prop]);var _urlencoded=exports.urlencoded(opts),
_json=exports.json(opts);return function(req,res,next){_json(req,res,function(err){if(err)return next(err);_urlencoded(req,res,next)})}},"bodyParser: use individual json/urlencoded middlewares");Object.defineProperty(exports,"json",{configurable:!0,enumerable:!0,get:createParserGetter("json")});Object.defineProperty(exports,"raw",{configurable:!0,enumerable:!0,get:createParserGetter("raw")});Object.defineProperty(exports,"text",{configurable:!0,enumerable:!0,get:createParserGetter("text")});Object.defineProperty(exports,
"urlencoded",{configurable:!0,enumerable:!0,get:createParserGetter("urlencoded")})}
//# sourceMappingURL=module$node_modules$body_parser$index.js.map
