shadow$provide.module$node_modules$content_type$index=function(global,require,module,exports){function ContentType(type){this.parameters=Object.create(null);this.type=type}var PARAM_REGEXP=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,TEXT_REGEXP=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,TOKEN_REGEXP=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,QESC_REGEXP=/\\([\u000b\u0020-\u00ff])/g,QUOTE_REGEXP=
/([\\"])/g,TYPE_REGEXP=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;exports.format=function(obj){if(!obj||"object"!==typeof obj)throw new TypeError("argument obj is required");var parameters=obj.parameters;obj=obj.type;if(!obj||!TYPE_REGEXP.test(obj))throw new TypeError("invalid type");var string=obj;if(parameters&&"object"===typeof parameters){obj=Object.keys(parameters).sort();for(var i=0;i<obj.length;i++){var param=obj[i];if(!TOKEN_REGEXP.test(param))throw new TypeError("invalid parameter name");
var JSCompiler_temp_const="; "+param+"\x3d";param=String(parameters[param]);if(!TOKEN_REGEXP.test(param)){if(0<param.length&&!TEXT_REGEXP.test(param))throw new TypeError("invalid parameter value");param='"'+param.replace(QUOTE_REGEXP,"\\$1")+'"'}string+=JSCompiler_temp_const+param}}return string};exports.parse=function(string){if(!string)throw new TypeError("argument string is required");if("object"===typeof string){var header;"function"===typeof string.getHeader?header=string.getHeader("content-type"):
"object"===typeof string.headers&&(header=string.headers&&string.headers["content-type"]);if("string"!==typeof header)throw new TypeError("content-type header is missing from object");string=header}if("string"!==typeof string)throw new TypeError("argument string is required to be a string");header=string.indexOf(";");var type=-1!==header?string.substr(0,header).trim():string.trim();if(!TYPE_REGEXP.test(type))throw new TypeError("invalid media type");type=new ContentType(type.toLowerCase());if(-1!==
header){var match;for(PARAM_REGEXP.lastIndex=header;match=PARAM_REGEXP.exec(string);){if(match.index!==header)throw new TypeError("invalid parameter format");header+=match[0].length;var key=match[1].toLowerCase();match=match[2];'"'===match[0]&&(match=match.substr(1,match.length-2).replace(QESC_REGEXP,"$1"));type.parameters[key]=match}if(header!==string.length)throw new TypeError("invalid parameter format");}return type}}
//# sourceMappingURL=module$node_modules$content_type$index.js.map
