shadow$provide.module$node_modules$iconv_lite$lib$streams=function(global,require,module,exports){function IconvLiteEncoderStream(conv,options){this.conv=conv;options=options||{};options.decodeStrings=!1;Transform.call(this,options)}function IconvLiteDecoderStream(conv,options){this.conv=conv;options=options||{};options.encoding=this.encoding="utf8";Transform.call(this,options)}var Buffer=require("module$node_modules$buffer$index").Buffer,Transform=require("module$node_modules$stream_browserify$index").Transform;
module.exports=function(iconv){iconv.encodeStream=function(encoding,options){return new IconvLiteEncoderStream(iconv.getEncoder(encoding,options),options)};iconv.decodeStream=function(encoding,options){return new IconvLiteDecoderStream(iconv.getDecoder(encoding,options),options)};iconv.supportsStreams=!0;iconv.IconvLiteEncoderStream=IconvLiteEncoderStream;iconv.IconvLiteDecoderStream=IconvLiteDecoderStream;iconv._collect=IconvLiteDecoderStream.prototype.collect};IconvLiteEncoderStream.prototype=Object.create(Transform.prototype,
{constructor:{value:IconvLiteEncoderStream}});IconvLiteEncoderStream.prototype._transform=function(chunk,encoding,done){if("string"!=typeof chunk)return done(Error("Iconv encoding stream needs strings as its input."));try{var res=this.conv.write(chunk);res&&res.length&&this.push(res);done()}catch(e){done(e)}};IconvLiteEncoderStream.prototype._flush=function(done){try{var res=this.conv.end();res&&res.length&&this.push(res);done()}catch(e){done(e)}};IconvLiteEncoderStream.prototype.collect=function(cb){var chunks=
[];this.on("error",cb);this.on("data",function(chunk){chunks.push(chunk)});this.on("end",function(){cb(null,Buffer.concat(chunks))});return this};IconvLiteDecoderStream.prototype=Object.create(Transform.prototype,{constructor:{value:IconvLiteDecoderStream}});IconvLiteDecoderStream.prototype._transform=function(chunk,encoding,done){if(!Buffer.isBuffer(chunk))return done(Error("Iconv decoding stream needs buffers as its input."));try{var res=this.conv.write(chunk);res&&res.length&&this.push(res,this.encoding);
done()}catch(e){done(e)}};IconvLiteDecoderStream.prototype._flush=function(done){try{var res=this.conv.end();res&&res.length&&this.push(res,this.encoding);done()}catch(e){done(e)}};IconvLiteDecoderStream.prototype.collect=function(cb){var res="";this.on("error",cb);this.on("data",function(chunk){res+=chunk});this.on("end",function(){cb(null,res)});return this}}
//# sourceMappingURL=module$node_modules$iconv_lite$lib$streams.js.map
