{
"version":3,
"file":"module$node_modules$fresh$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,gCAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8F5FC,QAASA,cAAc,CAACC,IAAD,CAAO,CACxBC,IAAAA,CAAYD,IAAZC,EAAoBC,IAAAC,MAAA,CAAWH,IAAX,CAGxB,OAA4B,QAArB,GAAA,MAAOC,KAAP,CACHA,IADG,CAEHG,GANwB,CA/E9B,IAAIC,8BAAgC,gCAOpCR,OAAAC,QAAA,CAWAQ,QAAe,CAACC,UAAD,CAAaC,UAAb,CAAyB,CAEtC,IAAIC,cAAgBF,UAAA,CAAW,mBAAX,CAApB,CACIG,UAAYH,UAAA,CAAW,eAAX,CAWhB,IARI,CAACE,aAQL,EARsB,CAACC,SAQvB,GADIC,UACJ,CADmBJ,UAAA,CAAW,eAAX,CACnB,GAAoBF,6BAAAO,KAAA,CAAmCD,UAAnC,CAApB,CACE,MAAO,CAAA,CAIT;GAAID,SAAJ,EAA+B,GAA/B,GAAiBA,SAAjB,CAAoC,CAC9BG,UAAAA,CAAOL,UAAA,KAEX,IAAI,CAACK,UAAL,CACE,MAAO,CAAA,CA4DX,KAzDE,IAAIC,UAAY,CAAA,CAAhB,CAoDEC,IAAM,CApDR,CAqDEC,KAAO,EArDT,CAsDEC,MAAQ,CAtDV,CAyDOC,EAAI,CAzDX,CAyDcC,IAxDeT,SAwDTU,OAAtB,CAAkCF,CAAlC,CAAsCC,GAAtC,CAA2CD,CAAA,EAA3C,CACE,OAzD6BR,SAyDrBW,WAAA,CAAeH,CAAf,CAAR,EACE,KAAK,EAAL,CACMD,KAAJ,GAAcF,GAAd,GACEE,KADF,CACUF,GADV,CACgBG,CADhB,CACoB,CADpB,CAGA,MACF,MAAK,EAAL,CACEF,IAAAM,KAAA,CAhEyBZ,SAgEfa,UAAA,CAAcN,KAAd,CAAqBF,GAArB,CAAV,CACAE,MAAA,CAAQF,GAAR,CAAcG,CAAd,CAAkB,CAClB,MACF,SACEH,GAAA,CAAMG,CAAN,CAAU,CAXd,CAiBFF,IAAAM,KAAA,CA1E+BZ,SA0ErBa,UAAA,CAAcN,KAAd,CAAqBF,GAArB,CAAV,CAzEE,KAASG,SAAT,CAAa,CAAb,CAAgBA,SAAhB,CA2EKF,IA3EeI,OAApB,CAAoCF,SAAA,EAApC,CAEE,GADIM,GACA,CAyEDR,IA1ES,CAAQE,SAAR,CACR,CAAAM,GAAA,GAAUX,UAAV,EAAkBW,GAAlB,GAA4B,IAA5B,CAAmCX,UAAnC,EAA2C,IAA3C,CAAkDW,GAAlD,GAA4DX,UAAhE,CAAsE,CACpEC,SAAA;AAAY,CAAA,CACZ,MAFoE,CAMxE,GAAIA,SAAJ,CACE,MAAO,CAAA,CAlByB,CAuBpC,MAAIL,CAAAA,aAAJ,GACMgB,UACgBC,CADDlB,UAAA,CAAW,eAAX,CACCkB,CAACD,UAADC,EAAmB3B,aAAA,CAAc0B,UAAd,CAAnBC,EAAkD3B,aAAA,CAAcU,aAAd,CAFxE,EASO,CAAA,CATP,CAKW,CAAA,CA/C2B,CAjCoD;",
"sources":["node_modules/fresh/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fresh$index\"] = function(global,require,module,exports) {\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseHttpDate","date","timestamp","Date","parse","NaN","CACHE_CONTROL_NO_CACHE_REGEXP","fresh","reqHeaders","resHeaders","modifiedSince","noneMatch","cacheControl","test","etag","etagStale","end","list","start","i","len","length","charCodeAt","push","substring","match","lastModified","modifiedStale"]
}
