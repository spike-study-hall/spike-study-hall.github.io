{
"version":3,
"file":"module$node_modules$express$lib$router$route.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/express/lib/router/route.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$express$lib$router$route\"] = function(global,require,module,exports) {\n/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","Route","path","stack","debug","methods","flatten","Layer","slice","Array","prototype","toString","Object","_handles_method","Route.prototype._handles_method","method","_all","name","toLowerCase","_options","Route.prototype._options","keys","get","head","push","i","length","toUpperCase","dispatch","Route.prototype.dispatch","req","res","done","next","err","layer","idx","handle_error","handle_request","route","all","Route.prototype.all","handles","call","arguments","handle","msg","type","TypeError","undefined","forEach","Error"]
}
