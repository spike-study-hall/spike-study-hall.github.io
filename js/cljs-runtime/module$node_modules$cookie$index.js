shadow$provide.module$node_modules$cookie$index=function(global,require,module,exports){exports.parse=function(str,options){if("string"!==typeof str)throw new TypeError("argument str must be a string");var obj={};options=options||{};str=str.split(pairSplitRegExp);options=options.decode||decode;for(var i=0;i<str.length;i++){var pair=str[i],eq_idx=pair.indexOf("\x3d");if(!(0>eq_idx)){var key=pair.substr(0,eq_idx).trim();pair=pair.substr(++eq_idx,pair.length).trim();'"'==pair[0]&&(pair=pair.slice(1,
-1));if(void 0==obj[key]){try{var JSCompiler_inline_result=options(pair)}catch(e){JSCompiler_inline_result=pair}obj[key]=JSCompiler_inline_result}}}return obj};exports.serialize=function(name,val,options){options=options||{};var enc=options.encode||encode;if("function"!==typeof enc)throw new TypeError("option encode is invalid");if(!fieldContentRegExp.test(name))throw new TypeError("argument name is invalid");if((val=enc(val))&&!fieldContentRegExp.test(val))throw new TypeError("argument val is invalid");
name=name+"\x3d"+val;if(null!=options.maxAge){val=options.maxAge-0;if(isNaN(val))throw Error("maxAge should be a Number");name+="; Max-Age\x3d"+Math.floor(val)}if(options.domain){if(!fieldContentRegExp.test(options.domain))throw new TypeError("option domain is invalid");name+="; Domain\x3d"+options.domain}if(options.path){if(!fieldContentRegExp.test(options.path))throw new TypeError("option path is invalid");name+="; Path\x3d"+options.path}if(options.expires){if("function"!==typeof options.expires.toUTCString)throw new TypeError("option expires is invalid");
name+="; Expires\x3d"+options.expires.toUTCString()}options.httpOnly&&(name+="; HttpOnly");options.secure&&(name+="; Secure");if(options.sameSite)switch("string"===typeof options.sameSite?options.sameSite.toLowerCase():options.sameSite){case !0:name+="; SameSite\x3dStrict";break;case "lax":name+="; SameSite\x3dLax";break;case "strict":name+="; SameSite\x3dStrict";break;case "none":name+="; SameSite\x3dNone";break;default:throw new TypeError("option sameSite is invalid");}return name};var decode=decodeURIComponent,
encode=encodeURIComponent,pairSplitRegExp=/; */,fieldContentRegExp=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/}
//# sourceMappingURL=module$node_modules$cookie$index.js.map
