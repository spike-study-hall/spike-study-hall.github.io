{
"version":3,
"file":"module$node_modules$des_DOT_js$lib$des$ede.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CASvGC,QAASA,SAAQ,CAACC,IAAD,CAAOC,GAAP,CAAY,CAC3BC,MAAAC,MAAA,CAAaF,GAAAG,OAAb,CAAyB,EAAzB,CAA6B,oBAA7B,CAEA,KAAIC,GAAKJ,GAAAK,MAAA,CAAU,CAAV,CAAa,CAAb,CAAT,CACIC,GAAKN,GAAAK,MAAA,CAAU,CAAV,CAAa,EAAb,CACLE,IAAAA,CAAKP,GAAAK,MAAA,CAAU,EAAV,CAAc,EAAd,CAGP,KAAAG,QAAA,CADW,SAAb,GAAIT,IAAJ,CACiB,CACbU,GAAAC,OAAA,CAAW,CAAEX,KAAM,SAAR,CAAmBC,IAAKI,EAAxB,CAAX,CADa,CAEbK,GAAAC,OAAA,CAAW,CAAEX,KAAM,SAAR,CAAmBC,IAAKM,EAAxB,CAAX,CAFa,CAGbG,GAAAC,OAAA,CAAW,CAAEX,KAAM,SAAR,CAAmBC,IAAKO,GAAxB,CAAX,CAHa,CADjB,CAOiB,CACbE,GAAAC,OAAA,CAAW,CAAEX,KAAM,SAAR,CAAmBC,IAAKO,GAAxB,CAAX,CADa,CAEbE,GAAAC,OAAA,CAAW,CAAEX,KAAM,SAAR,CAAmBC,IAAKM,EAAxB,CAAX,CAFa,CAGbG,GAAAC,OAAA,CAAW,CAAEX,KAAM,SAAR,CAAmBC,IAAKI,EAAxB,CAAX,CAHa,CAdU,CAsB7BO,QAASA,IAAG,CAACC,OAAD,CAAU,CACpBC,MAAAC,KAAA,CAAY,IAAZ;AAAkBF,OAAlB,CAGA,KAAAG,UAAA,CADYC,IAAIlB,QAAJkB,CAAa,IAAAjB,KAAbiB,CAAwB,IAAAJ,QAAAZ,IAAxBgB,CAHQ,CA5BtB,IAAIf,OAASN,OAAA,CAAQ,+CAAR,CACTsB,OAAAA,CAAWtB,OAAA,CAAQ,+CAAR,CAEf,KAAIkB,OAASlB,OAAA,CAAQ,+CAAR,CAAb,CACIc,IAAMd,OAAA,CAAQ,4CAAR,CA8BVsB,OAAA,CAASN,GAAT,CAAcE,MAAd,CAEAjB,OAAAC,QAAA,CAAiBc,GAEjBA,IAAAD,OAAA,CAAaQ,QAAe,CAACN,OAAD,CAAU,CACpC,MAAO,KAAID,GAAJ,CAAQC,OAAR,CAD6B,CAItCD,IAAAQ,UAAAC,QAAA,CAAwBC,QAAgB,CAACC,GAAD,CAAMC,KAAN,CAAaC,GAAb,CAAkBC,MAAlB,CAA0B,CAChE,IAAIT,MAAQ,IAAAD,UAEZC,MAAAR,QAAA,CAAc,CAAd,CAAAY,QAAA,CAAyBE,GAAzB;AAA8BC,KAA9B,CAAqCC,GAArC,CAA0CC,MAA1C,CACAT,MAAAR,QAAA,CAAc,CAAd,CAAAY,QAAA,CAAyBI,GAAzB,CAA8BC,MAA9B,CAAsCD,GAAtC,CAA2CC,MAA3C,CACAT,MAAAR,QAAA,CAAc,CAAd,CAAAY,QAAA,CAAyBI,GAAzB,CAA8BC,MAA9B,CAAsCD,GAAtC,CAA2CC,MAA3C,CALgE,CAQlEd,IAAAQ,UAAAO,KAAA,CAAqBjB,GAAAU,UAAAO,KACrBf,IAAAQ,UAAAQ,OAAA,CAAuBlB,GAAAU,UAAAQ,OAtDgF;",
"sources":["node_modules/des_DOT_js/lib/des/ede.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$des_DOT_js$lib$des$ede\"] = function(global,require,module,exports) {\n'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n\n};"],
"names":["shadow$provide","global","require","module","exports","EDEState","type","key","assert","equal","length","k1","slice","k2","k3","ciphers","DES","create","EDE","options","Cipher","call","_edeState","state","inherits","EDE.create","prototype","_update","EDE.prototype._update","inp","inOff","out","outOff","_pad","_unpad"]
}
