{
"version":3,
"file":"module$node_modules$ws$lib$PerMessageDeflate.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/ws/lib/PerMessageDeflate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ws$lib$PerMessageDeflate\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./BufferUtil');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\nconst kOwner = Symbol('owner');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Number} options.level The value of zlib's `level` param\n   * @param {Number} options.memLevel The value of zlib's `memLevel` param\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined\n      ? this._options.threshold\n      : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined\n        ? this._options.concurrencyLimit\n        : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName () {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create extension parameters offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer () {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept extension offer.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept (paramsList) {\n    paramsList = this.normalizeParams(paramsList);\n\n    var params;\n    if (this._isServer) {\n      params = this.acceptAsServer(paramsList);\n    } else {\n      params = this.acceptAsClient(paramsList);\n    }\n\n    this.params = params;\n    return params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup () {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   * Accept extension offer from client.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer (paramsList) {\n    const accepted = {};\n    const result = paramsList.some((params) => {\n      if (\n        (this._options.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (this._options.serverMaxWindowBits === false &&\n          params.server_max_window_bits) ||\n        (typeof this._options.serverMaxWindowBits === 'number' &&\n          typeof params.server_max_window_bits === 'number' &&\n          this._options.serverMaxWindowBits > params.server_max_window_bits) ||\n        (typeof this._options.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return;\n      }\n\n      if (\n        this._options.serverNoContextTakeover ||\n        params.server_no_context_takeover\n      ) {\n        accepted.server_no_context_takeover = true;\n      }\n      if (\n        this._options.clientNoContextTakeover ||\n        (this._options.clientNoContextTakeover !== false &&\n          params.client_no_context_takeover)\n      ) {\n        accepted.client_no_context_takeover = true;\n      }\n      if (typeof this._options.serverMaxWindowBits === 'number') {\n        accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n      } else if (typeof params.server_max_window_bits === 'number') {\n        accepted.server_max_window_bits = params.server_max_window_bits;\n      }\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n      } else if (\n        this._options.clientMaxWindowBits !== false &&\n        typeof params.client_max_window_bits === 'number'\n      ) {\n        accepted.client_max_window_bits = params.client_max_window_bits;\n      }\n      return true;\n    });\n\n    if (!result) throw new Error(\"Doesn't support the offered configuration\");\n\n    return accepted;\n  }\n\n  /**\n   * Accept extension response from server.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient (paramsList) {\n    const params = paramsList[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n\n    if (\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        (!params.client_max_window_bits ||\n          params.client_max_window_bits > this._options.clientMaxWindowBits)) ||\n      (this._options.clientMaxWindowBits === false &&\n        params.client_max_window_bits)\n    ) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize extensions parameters.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Array} Normalized extensions parameters\n   * @private\n   */\n  normalizeParams (paramsList) {\n    return paramsList.map((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n        if (value.length > 1) {\n          throw new Error(`Multiple extension parameters for ${key}`);\n        }\n\n        value = value[0];\n\n        switch (key) {\n          case 'server_no_context_takeover':\n          case 'client_no_context_takeover':\n            if (value !== true) {\n              throw new Error(`invalid extension parameter value for ${key} (${value})`);\n            }\n            params[key] = true;\n            break;\n          case 'server_max_window_bits':\n          case 'client_max_window_bits':\n            if (typeof value === 'string') {\n              value = parseInt(value, 10);\n              if (\n                Number.isNaN(value) ||\n                value < zlib.Z_MIN_WINDOWBITS ||\n                value > zlib.Z_MAX_WINDOWBITS\n              ) {\n                throw new Error(`invalid extension parameter value for ${key} (${value})`);\n              }\n            }\n            if (!this._isServer && value === true) {\n              throw new Error(`Missing extension parameter value for ${key}`);\n            }\n            params[key] = value;\n            break;\n          default:\n            throw new Error(`Not defined extension parameter (${key})`);\n        }\n      });\n      return params;\n    });\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress (data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({ windowBits });\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate[kOwner] = this;\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress (data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        memLevel: this._options.memLevel,\n        level: this._options.level,\n        flush: zlib.Z_SYNC_FLUSH,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData (chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData (chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kOwner]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kOwner]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new Error('max payload size exceeded');\n  this[kError].closeCode = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError (err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kOwner]._inflate = null;\n  this[kCallback](err);\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","deflateOnData","chunk","kBuffers","push","kTotalLength","length","inflateOnData","kOwner","_maxPayload","kError","Error","closeCode","removeListener","reset","inflateOnError","err","_inflate","kCallback","process","safeBuffer","Limiter","zlib","bufferUtil","Buffer","TRAILER","from","EMPTY_BLOCK","kWriteInProgress","Symbol","kPendingClose","zlibLimiter","PerMessageDeflate","constructor","options","isServer","maxPayload","_options","_threshold","undefined","threshold","_isServer","params","_deflate","concurrency","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","paramsList","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","accepted","some","result","map","Object","keys","forEach","key","value","parseInt","Number","isNaN","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","decompress","data","fin","callback","done","_decompress","compress","_compress","endpoint","createInflateRaw","windowBits","Z_DEFAULT_WINDOWBITS","on","write","flush","concat","createDeflateRaw","memLevel","level","Z_SYNC_FLUSH","slice","nextTick","extensionName"]
}
