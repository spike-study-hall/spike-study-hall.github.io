{
"version":3,
"file":"module$node_modules$ws$lib$Sender.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/ws/lib/Sender.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ws$lib$Sender\"] = function(global,require,module,exports) {\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst bufferUtil = require('./BufferUtil');\nconst ErrorCodes = require('./ErrorCodes');\nconst constants = require('./Constants');\n\nconst Buffer = safeBuffer.Buffer;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor (socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame (data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2, true);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2, true);\n      target.writeUInt32BE(data.length, 6, true);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      code = 1000;\n    } else if (typeof code !== 'number' || !ErrorCodes.isValidErrorCode(code)) {\n      throw new Error('first argument must be a valid error code number');\n    }\n\n    if (data === undefined || data === '') {\n      if (code === 1000) {\n        buf = constants.EMPTY_BUFFER;\n      } else {\n        buf = Buffer.allocUnsafe(2);\n        buf.writeUInt16BE(code, 0, true);\n      }\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0, true);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose (data, mask, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x08,\n      mask,\n      readOnly: false\n    }), cb);\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @public\n   */\n  ping (data, mask) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly]);\n    } else {\n      this.doPing(data, mask, readOnly);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @private\n   */\n  doPing (data, mask, readOnly) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x09,\n      mask,\n      readOnly\n    }));\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @public\n   */\n  pong (data, mask) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly]);\n    } else {\n      this.doPong(data, mask, readOnly);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @private\n   */\n  doPong (data, mask, readOnly) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x0a,\n      mask,\n      readOnly\n    }));\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send (data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(Sender.frame(data, {\n        fin: options.fin,\n        rsv1: false,\n        opcode,\n        mask: options.mask,\n        readOnly\n      }), cb);\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch (data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this._deflating = false;\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue () {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue (params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame (list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer (view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","viewToBuffer","view","buf","Buffer","from","buffer","byteLength","slice","byteOffset","safeBuffer","crypto","PerMessageDeflate","bufferUtil","ErrorCodes","constants","Sender","constructor","socket","extensions","_extensions","_socket","_firstFragment","_compress","_bufferedBytes","_deflating","_queue","frame","data","options","merge","length","mask","readOnly","offset","payloadLength","target","allocUnsafe","fin","opcode","rsv1","writeUInt16BE","writeUInt32BE","copy","randomBytes","close","code","cb","undefined","isValidErrorCode","Error","EMPTY_BUFFER","write","enqueue","doClose","sendFrame","ping","isBuffer","ArrayBuffer","isView","doPing","pong","doPong","send","binary","compress","perMessageDeflate","extensionName","_threshold","opts","dispatch","_","dequeue","params","shift","apply","push","list"]
}
