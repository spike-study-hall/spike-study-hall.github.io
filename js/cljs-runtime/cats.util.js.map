{"version":3,"sources":["cats/util.cljc"],"mappings":";;;AA6BA,AAAA,AAAMA,AACHC;AADH,AAKW,AAAA,AAAA,AAAA,AAAAC,AAAaD;;AAAb,AAAA,AAAA,AAAaA,AAEX,AAAaE,AAAGC,AAAOC;AAAvB,AAAA,AAAA,AAAaF;AAAb,AACE,AAACG,AAAOF,AAAO,AAACG,AAAqBJ","names":["cats.util/make-printable","klass","cljs.core/PROTOCOL_SENTINEL","mv","writer","_","cljs.core/-write","cats.protocols/-repr"],"sourcesContent":[";; Copyright (c) 2015 Andrey Antukh <niwi@niwi.nz>\n;; Copyright (c) 2015 Alejandro G\u00f3mez <alejandro@dialelo.com>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITtY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVE N IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns cats.util\n  \"A collection of utils that used around the library.\"\n  (:require [cats.protocols]))\n\n(defn make-printable\n  [klass]\n  #?(:clj  (defmethod print-method klass\n             [mv ^java.io.Writer writer]\n             (.write writer (cats.protocols/-repr mv)))\n     :cljs (extend-type klass\n             IPrintWithWriter\n             (-pr-writer [mv writer _]\n               (-write writer (cats.protocols/-repr mv))))))\n"]}