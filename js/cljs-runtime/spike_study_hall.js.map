{"version":3,"sources":["spike_study_hall.cljs"],"mappings":"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","names":["spike-study-hall/peer","js/peerjs.Peer","spike-study-hall/main","frp.derived/event","spike-study-hall/stream","spike-study-hall/streams","frp.clojure.core/vector","spike-study-hall/video-component","stream*","ref","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","aid.unit/unit","reagent.core.create_class.cljs$core$IFn$_invoke$arity$1","cljs.core/deref","p1__60633#","_","cljs.core/reset!","spike-study-hall/app-compoment","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","com.rpl.specter/setval*","com.rpl.specter/BEFORE-ELEM","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/mapv","cljs.core/vector","spike-study-hall/app","cats.core/<$>","G__60634","G__60635","frp.core/run","aid.core/flip","reagent.dom/render","js/document.getElementById","activation__47786__auto__","frp.primitives.event/activate*","frp.primitives.event/positive-infinity","G__60636","frp.primitives.event/reload","c__38105__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__38106__auto__","switch__38082__auto__","state_60668","state_val_60669","inst_60639","inst_60640","cljs.core.async.interop/p->c","cljs.core.async.impl.ioc-helpers/take!","inst_60642","inst_60643","cljs.core/ExceptionInfo","inst_60644","cljs.core/ex-data","inst_60645","inst_60646","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","inst_60647","statearr-60670","statearr-60671","statearr-60672","inst_60649","statearr-60673","statearr-60674","inst_60652","inst_60653","inst_60654","inst_60655","inst_60656","inst_60657","inst_60658","cljs.core/PersistentHashMap","inst_60659","statearr-60675","inst_60661","inst_60662","inst_60663","inst_60664","inst_60665","inst_60666","statearr-60677","cljs.core.async.impl.ioc-helpers/return-chan","statearr-60678","state-machine__38083__auto__","ret-value__38084__auto__","result__38085__auto__","cljs.core/keyword-identical?","ex__38086__auto__","e60679","statearr-60680","cljs.core/seq","statearr-60681","cljs.core/first","state__38107__auto__","statearr-60682","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","local-stream","js/navigator.mediaDevices.getDisplayMedia","cljs_http.client.get.cljs$core$IFn$_invoke$arity$variadic","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/=","cljs.core/run!","id","p1__60637#","connection","G__60676","p1__60638#"],"sourcesContent":["(ns spike-study-hall\n  (:require [aid.core :as aid]\n            [aid.unit :as unit]\n            [cats.core :as m]\n            [cljs.core.async :refer [go <!]]\n            [cljs.core.async.interop :refer-macros [<p!]]\n            [cljs-http.client :as http]\n            [com.rpl.specter :as s]\n            [frp.clojure.core :as core]\n            [frp.core :as frp]\n            [peerjs :as peerjs]\n            [reagent.dom :as rd]\n            [reagent.core :as r]))\n\n(def peer\n  (peerjs.Peer. #js {:host   \"lit-spire-00768.herokuapp.com\"\n                     :port   80\n                     :secure true}))\n\n;(def peer\n;  (peerjs.Peer. #js {:host  \"localhost\"\n;                     :port  9000\n;                     :debug 3}))\n\n\n(defn main\n  [])\n\n(frp/defe stream)\n\n(def streams\n  (core/vector stream))\n\n(defn video-component\n  [stream*]\n  (let [ref (atom unit/unit)]\n    (r/create-class\n      {:component-did-mount #(-> @ref\n                                 .-srcObject\n                                 (set! stream*))\n       :reagent-render      (fn [_]\n                              [:video {:autoPlay true\n                                       :width    256\n                                       :ref      #(reset! ref %)}])})))\n\n(def app-compoment\n  (comp (partial s/setval* s/BEFORE-ELEM :div)\n        (partial mapv (partial vector video-component))))\n\n(def app\n  (m/<$> app-compoment streams))\n\n(frp/run (partial (aid/flip rd/render) (js/document.getElementById \"app\")) app)\n\n(frp/activate)\n\n(go\n  (let [local-stream (<p! (js/navigator.mediaDevices.getDisplayMedia))]\n    (stream local-stream)\n    (->> {:with-credentials? false}\n         ;(http/get \"http://localhost:9000/peerjs/peers\")\n         (http/get \"https://lit-spire-00768.herokuapp.com/peerjs/peers\")\n         <!\n         :body\n         (remove (partial = peer.id))\n         (run! (fn [id]\n                 (.on (.call peer id local-stream)\n                      \"stream\"\n                      #(stream %)))))\n    (.on peer \"call\" (fn [connection]\n                       (doto connection\n                         (.answer local-stream)\n                         (.on \"stream\" #(stream %)))))))\n"]}