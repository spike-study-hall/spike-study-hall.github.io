shadow$provide.module$node_modules$iconv_lite$lib$extend_node=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;module.exports=function(iconv){var original=void 0;iconv.supportsNodeEncodingsExtension=!(Buffer.from||new Buffer(0)instanceof Uint8Array);iconv.extendNodeEncodings=function(){if(!original)if(original={},iconv.supportsNodeEncodingsExtension){var nodeNativeEncodings={hex:!0,utf8:!0,"utf-8":!0,ascii:!0,binary:!0,base64:!0,ucs2:!0,"ucs-2":!0,
utf16le:!0,"utf-16le":!0};Buffer.isNativeEncoding=function(enc){return enc&&nodeNativeEncodings[enc.toLowerCase()]};var SlowBuffer=require("module$node_modules$buffer$index").SlowBuffer;original.SlowBufferToString=SlowBuffer.prototype.toString;SlowBuffer.prototype.toString=function(encoding,start,end){encoding=String(encoding||"utf8").toLowerCase();if(Buffer.isNativeEncoding(encoding))return original.SlowBufferToString.call(this,encoding,start,end);"undefined"==typeof start&&(start=0);"undefined"==
typeof end&&(end=this.length);return iconv.decode(this.slice(start,end),encoding)};original.SlowBufferWrite=SlowBuffer.prototype.write;SlowBuffer.prototype.write=function(string,offset,length,encoding){if(isFinite(offset))isFinite(length)||(encoding=length,length=void 0);else{var swap=encoding;encoding=offset;offset=length;length=swap}offset=+offset||0;swap=this.length-offset;length?(length=+length,length>swap&&(length=swap)):length=swap;encoding=String(encoding||"utf8").toLowerCase();if(Buffer.isNativeEncoding(encoding))return original.SlowBufferWrite.call(this,
string,offset,length,encoding);if(0<string.length&&(0>length||0>offset))throw new RangeError("attempt to write beyond buffer bounds");string=iconv.encode(string,encoding);string.length<length&&(length=string.length);string.copy(this,offset,0,length);return length};original.BufferIsEncoding=Buffer.isEncoding;Buffer.isEncoding=function(encoding){return Buffer.isNativeEncoding(encoding)||iconv.encodingExists(encoding)};original.BufferByteLength=Buffer.byteLength;Buffer.byteLength=SlowBuffer.byteLength=
function(str,encoding){encoding=String(encoding||"utf8").toLowerCase();return Buffer.isNativeEncoding(encoding)?original.BufferByteLength.call(this,str,encoding):iconv.encode(str,encoding).length};original.BufferToString=Buffer.prototype.toString;Buffer.prototype.toString=function(encoding,start,end){encoding=String(encoding||"utf8").toLowerCase();if(Buffer.isNativeEncoding(encoding))return original.BufferToString.call(this,encoding,start,end);"undefined"==typeof start&&(start=0);"undefined"==typeof end&&
(end=this.length);return iconv.decode(this.slice(start,end),encoding)};original.BufferWrite=Buffer.prototype.write;Buffer.prototype.write=function(string,offset,length,encoding){var _offset=offset,_length=length,_encoding=encoding;if(isFinite(offset))isFinite(length)||(encoding=length,length=void 0);else{var swap=encoding;encoding=offset;offset=length;length=swap}encoding=String(encoding||"utf8").toLowerCase();if(Buffer.isNativeEncoding(encoding))return original.BufferWrite.call(this,string,_offset,
_length,_encoding);offset=+offset||0;_offset=this.length-offset;length?(length=+length,length>_offset&&(length=_offset)):length=_offset;if(0<string.length&&(0>length||0>offset))throw new RangeError("attempt to write beyond buffer bounds");string=iconv.encode(string,encoding);string.length<length&&(length=string.length);string.copy(this,offset,0,length);return length};iconv.supportsStreams&&(SlowBuffer=require("module$node_modules$stream_browserify$index").Readable,original.ReadableSetEncoding=SlowBuffer.prototype.setEncoding,
SlowBuffer.prototype.setEncoding=function(enc,options){this._readableState.decoder=iconv.getDecoder(enc,options);this._readableState.encoding=enc},SlowBuffer.prototype.collect=iconv._collect)}else console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node"),console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility")};iconv.undoExtendNodeEncodings=function(){if(iconv.supportsNodeEncodingsExtension){if(!original)throw Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");
delete Buffer.isNativeEncoding;var SlowBuffer=require("module$node_modules$buffer$index").SlowBuffer;SlowBuffer.prototype.toString=original.SlowBufferToString;SlowBuffer.prototype.write=original.SlowBufferWrite;Buffer.isEncoding=original.BufferIsEncoding;Buffer.byteLength=original.BufferByteLength;Buffer.prototype.toString=original.BufferToString;Buffer.prototype.write=original.BufferWrite;iconv.supportsStreams&&(SlowBuffer=require("module$node_modules$stream_browserify$index").Readable,SlowBuffer.prototype.setEncoding=
original.ReadableSetEncoding,delete SlowBuffer.prototype.collect);original=void 0}}}}
//# sourceMappingURL=module$node_modules$iconv_lite$lib$extend_node.js.map
