{
"version":3,
"file":"module$node_modules$randombytes$browser.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,WAAW,EAAG,CACrB,KAAUC,MAAJ,CAAU,gHAAV,CAAN,CADqB,CAavBC,QAASA,YAAY,CAACC,IAAD,CAAOC,EAAP,CAAW,CAE9B,GAjBeC,UAiBf,CAAIF,IAAJ,CAAuB,KAAM,KAAIG,UAAJ,CAAe,iCAAf,CAAN,CAEvB,IAAIC,MAAQC,MAAAC,YAAA,CAAmBN,IAAnB,CAEZ,IAAW,CAAX,CAAIA,IAAJ,CACE,GA1BYO,KA0BZ,CAAIP,IAAJ,CAEE,IAAK,IAAIQ,UAAY,CAArB,CAAwBA,SAAxB,CAAoCR,IAApC,CAA0CQ,SAA1C,EA5BUD,KA4BV,CAGEE,MAAAC,gBAAA,CAAuBN,KAAAO,MAAA,CAAYH,SAAZ;AAAuBA,SAAvB,CA/BfD,KA+Be,CAAvB,CALJ,KAQEE,OAAAC,gBAAA,CAAuBN,KAAvB,CAIJ,OAAkB,UAAlB,GAAI,MAAOH,GAAX,CACSW,OAAAC,SAAA,CAAiB,QAAS,EAAG,CAClCZ,EAAA,CAAG,IAAH,CAASG,KAAT,CADkC,CAA7B,CADT,CAMOA,KAzBuB,CAxBhC,IAAIQ,QAAUlB,OAAA,CAAQ,qCAAR,CACd,aAcA,KAAIW,OAASX,OAAA,CAAQ,uCAAR,CAAAW,OAAb,CACII,OAAShB,MAAAgB,OAATA,EAA0BhB,MAAAqB,SAG5BnB,OAAAC,QAAA,CADEa,MAAJ,EAAcA,MAAAC,gBAAd,CACmBX,WADnB,CAGmBF,UAtBiF;",
"sources":["node_modules/randombytes/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$randombytes$browser\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","oldBrowser","Error","randomBytes","size","cb","MAX_UINT32","RangeError","bytes","Buffer","allocUnsafe","MAX_BYTES","generated","crypto","getRandomValues","slice","process","nextTick","msCrypto"]
}
