{"version":3,"sources":["frp/core.cljc"],"mappings":";;;;;;AAQA,AAAKA,AACHC;AAEF,AAAKC,AACHC;AAMF,AAAKC,AACHC;AAEF,AAAKC,AACHC;AAEF,AAAKC,AACHC;AAEF,AAAKC,AACHC;AAEF,AAAKC,AACHC;AAQF,AAAKC,AACHC;AAUF,AAAKC,AACHC;AAEF,AAAKC,AACHC","names":["frp.core/restart","frp.primitives.behavior/restart","frp.core/event","frp.derived/event","frp.core/behavior","frp.derived/behavior","frp.core/time","frp.primitives.behavior/time","frp.core/stepper","frp.primitives.behavior/stepper","frp.core/transduce","frp.primitives.event/transduce","frp.core/snapshot","frp.primitives.event/snapshot","frp.core/run","frp.io/run","frp.core/accum","frp.derived/accum","frp.core/switcher","frp.derived/switcher"],"sourcesContent":["(ns frp.core\n  (:refer-clojure :exclude [stepper time transduce])\n  (:require [frp.derived :as derived]\n            [frp.io :as io]\n            [frp.primitives.behavior :as behavior]\n            [frp.primitives.event :as event])\n  #?(:cljs (:require-macros frp.core)))\n\n(def restart\n  behavior/restart)\n\n(def event\n  derived/event)\n\n(defmacro defe\n  [& names]\n  `(derived/defe ~@names))\n\n(def behavior\n  derived/behavior)\n\n(def time\n  behavior/time)\n\n(def stepper\n  behavior/stepper)\n\n(def transduce\n  event/transduce)\n\n(def snapshot\n  event/snapshot)\n\n(defmacro activate\n  ([]\n   `(event/activate))\n  ([rate]\n   `(event/activate ~rate)))\n\n(def run\n  io/run)\n\n(defmacro transparent\n  [expr]\n  `(derived/transparent ~expr))\n\n(defmacro undoable\n  [& more]\n  `(derived/undoable ~@more))\n\n(def accum\n  derived/accum)\n\n(def switcher\n  derived/switcher)\n"]}