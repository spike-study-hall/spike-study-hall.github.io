{
"version":3,
"file":"module$node_modules$iconv_lite$lib$streams.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/iconv-lite/lib/streams.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$iconv_lite$lib$streams\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","IconvLiteEncoderStream","conv","options","decodeStrings","Transform","call","IconvLiteDecoderStream","encoding","Buffer","module.exports","iconv","encodeStream","iconv.encodeStream","getEncoder","decodeStream","iconv.decodeStream","getDecoder","supportsStreams","_collect","prototype","collect","Object","create","constructor","value","_transform","IconvLiteEncoderStream.prototype._transform","chunk","done","Error","res","write","length","push","e","_flush","IconvLiteEncoderStream.prototype._flush","end","IconvLiteEncoderStream.prototype.collect","cb","chunks","on","concat","IconvLiteDecoderStream.prototype._transform","isBuffer","IconvLiteDecoderStream.prototype._flush","IconvLiteDecoderStream.prototype.collect"]
}
