{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$base.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/base.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$base\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","BaseCurve","type","conf","p","BN","red","prime","mont","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","Array","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","adjustCount","div","cmpn","redN","_maxwellTrick","BasePoint","curve","precomputed","utils","getNAF","getJSF","assert","prototype","point","BaseCurve.prototype.point","Error","validate","BaseCurve.prototype.validate","_fixedNafMul","BaseCurve.prototype._fixedNafMul","k","doubles","_getDoubles","naf","I","step","repr","j","length","nafW","push","a","jpoint","b","i","mixedAdd","points","neg","add","toP","_wnafMul","BaseCurve.prototype._wnafMul","nafPoints","_getNAFPoints","w","wnd","acc","dblp","z","_wnafMulAdd","BaseCurve.prototype._wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","max","Math","comb","y","cmp","toJ","redNeg","index","jsf","tmp","eq","BasePoint.prototype.eq","BasePoint.prototype.validate","decodePoint","BaseCurve.prototype.decodePoint","bytes","enc","toArray","byteLength","res","slice","pointFromX","encodeCompressed","BasePoint.prototype.encodeCompressed","encode","_encode","BasePoint.prototype._encode","compact","x","getX","getY","isEven","concat","BasePoint.prototype.encode","precompute","BasePoint.prototype.precompute","power","beta","_getBeta","_hasDoubles","BasePoint.prototype._hasDoubles","ceil","BasePoint.prototype._getDoubles","dbl","BasePoint.prototype._getNAFPoints","BasePoint.prototype._getBeta","BasePoint.prototype.dblp","r"]
}
