{
"version":3,
"file":"module$node_modules$express$lib$view.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/express/lib/view.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$express$lib$view\"] = function(global,require,module,exports) {\n/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.substr(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","View","name","options","opts","defaultEngine","ext","extname","root","Error","fileName","engines","mod","substr","debug","fn","__express","engine","path","lookup","tryStat","fs","statSync","e","dirname","basename","join","resolve","prototype","View.prototype.lookup","roots","concat","i","length","loc","dir","file","render","View.prototype.render","callback","View.prototype.resolve","stat","isFile"]
}
