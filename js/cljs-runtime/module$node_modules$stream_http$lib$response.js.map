{
"version":3,
"file":"module$node_modules$stream_http$lib$response.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/stream-http/lib/response.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$stream_http$lib$response\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","process","Buffer","capability","inherits","stream","rStates","readyStates","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","IncomingMessage","exports.IncomingMessage","xhr","response","mode","fetchTimer","self","Readable","call","_mode","headers","rawHeaders","trailers","rawTrailers","on","nextTick","emit","read","reader","then","result","_destroyed","done","clearTimeout","push","value","catch","err","_fetchResponse","url","statusCode","status","statusMessage","statusText","forEach","header","key","toLowerCase","writableStream","writable","WritableStream","write","chunk","Promise","resolve","reject","_resumeFetch","close","abort","body","pipeTo","e","getReader","_xhr","_pos","responseURL","getAllResponseHeaders","split","matches","match","undefined","_charset","overrideMimeType","mimeType","charsetMatch","prototype","_read","IncomingMessage.prototype._read","_onXHRProgress","IncomingMessage.prototype._onXHRProgress","readyState","toArray","VBArray","responseBody","responseText","length","newData","substr","buffer","i","charCodeAt","Uint8Array","MSStreamReader","onprogress","reader.onprogress","byteLength","slice","onload","reader.onload","readAsArrayBuffer"]
}
