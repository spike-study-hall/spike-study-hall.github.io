{
"version":3,
"file":"module$node_modules$pako$lib$zlib$adler32.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmDtGD,MAAAC,QAAA,CAzBAC,QAAgB,CAACC,KAAD,CAAQC,GAAR,CAAaC,GAAb,CAAkBC,GAAlB,CAAuB,CAAA,IACjCC,GAAMJ,KAANI,CAAc,KAAdA,CAAuB,CACvBC,MAAAA,CAAOL,KAAPK,GAAiB,EAAjBA,CAAuB,KAAvBA,CAAgC,CAGpC,KAJA,IAEIC,CAEJ,CAAe,CAAf,GAAOJ,GAAP,CAAA,CAAkB,CAIhBI,CAAA,CAAU,GAAN,CAAAJ,GAAA,CAAa,GAAb,CAAoBA,GACxBA,IAAA,EAAOI,CAEP,GACEF,GACA,CADMA,EACN,CADWH,GAAA,CAAIE,GAAA,EAAJ,CACX,CADwB,CACxB,CAAAE,KAAA,CAAMA,KAAN,CAAWD,EAAX,CAAgB,CAFlB,OAGS,EAAEE,CAHX,CAKAF,GAAA,EAAM,KACNC,MAAA,EAAM,KAbU,CAgBlB,MAAQD,GAAR,CAAcC,KAAd,EAAoB,EAApB,CAA0B,CArBW,CA1B+D;",
"sources":["node_modules/pako/lib/zlib/adler32.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pako$lib$zlib$adler32\"] = function(global,require,module,exports) {\n'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n\n};"],
"names":["shadow$provide","global","require","module","exports","adler32","adler","buf","len","pos","s1","s2","n"]
}
