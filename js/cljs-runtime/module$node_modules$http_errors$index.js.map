{
"version":3,
"file":"module$node_modules$http_errors$index.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/http-errors/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$http_errors$index\"] = function(global,require,module,exports) {\n/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","createError","err","msg","status","props","i","arguments","length","arg","Error","statusCode","deprecate","statuses","HttpError","Number","String","charAt","captureStackTrace","expose","key","createClientErrorConstructor","name","code","ClientError","message","setPrototypeOf","prototype","Object","defineProperty","enumerable","configurable","value","writable","className","match","inherits","nameFunc","createServerErrorConstructor","ServerError","func","desc","getOwnPropertyDescriptor","toIdentifier","createHttpErrorConstructor","TypeError","populateConstructorExports","codes","forEach","forEachCode","CodeError","function","ImATeapot"]
}
