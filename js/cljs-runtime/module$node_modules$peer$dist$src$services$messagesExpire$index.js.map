{
"version":3,
"file":"module$node_modules$peer$dist$src$services$messagesExpire$index.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE5HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAMC,QAAUN,OAAA,CAAQ,yCAAR,CACVO,OAAAA,CACFC,QAAW,CAAC,0BAAD,CAAoC,CAAjC,IAAAC,MAAF,0BAAE,MAAA,CAAOC,OAAT,0BAAS,OAAQC,2BAAAA,CAAjB,0BAAiB,eACzB,KAAAC,UAAA,CAAiB,IACjB,KAAAH,MAAA,CAAaA,KACb,KAAAC,OAAA,CAAcA,MACd,KAAAC,eAAA;AAAsBA,0BAJqB,CAM/C,OAAA,UAAA,wBAAAE,CAAAA,QAAuB,EAAG,CAAA,IAAA,aAAA,IAClB,KAAAD,UAAJ,EACIE,YAAA,CAAa,IAAAF,UAAb,CAGJ,KAAAA,UAAA,CAAiBG,UAAA,CAAW,QAAA,EAAM,CAC9B,YAAAC,iBAAA,EACA,aAAAJ,UAAA,CAAiB,IACjB,aAAAC,wBAAA,EAH8B,CAAjB,CAId,IAAAH,OAAAO,iBAJc,CALK,CAW1B,OAAA,UAAA,uBAAAC,CAAAA,QAAsB,EAAG,CACjB,IAAAN,UAAJ,GACIE,YAAA,CAAa,IAAAF,UAAb,CACA,CAAA,IAAAA,UAAA,CAAiB,IAFrB,CADqB,CAMzB,OAAA,UAAA,iBAAAI,CAAAA,QAAgB,EAAG,CACf,IAAMG;AAAwB,IAAAV,MAAAW,uBAAA,EAA9B,CACMC,IAAMC,CAAA,IAAIC,IAAJD,SAAA,EADZ,CAEME,QAAU,IAAAd,OAAAe,eAFhB,CAGMC,KAAO,EACb,sBAAA,CAAA,OAAA,aAAA,CAAkCP,qBAAlC,CAAA,KAAA,IAAA,gCAAA,qBAAA,KAAA,EAAA,CAAA,CAAA,+BAAA,KAAA,CAAA,+BAAA,CAAA,qBAAA,KAAA,EAAA,CAAyD,CAA9CQ,+BAAAA,CAAX,+BAAA,MACI,KAAMC,aAAe,IAAAnB,MAAAoB,oBAAA,CAA+BF,+BAA/B,CAErB,IAAI,EADiBN,GACjB,CADuBO,YAAAE,cAAA,EACvB;AAAeN,OAAf,CAAJ,CAAA,CAEMO,YAAAA,CAAWH,YAAAI,YAAA,EACjB,aAAA,CAAA,OAAA,aAAA,CAAsBD,YAAtB,CAAA,KAAA,IAAA,oBAAA,YAAA,KAAA,EAAA,CAAA,CAAA,mBAAA,KAAA,CAAA,mBAAA,CAAA,YAAA,KAAA,EAAA,CAAgC,CAArBE,mBAAAA,CAAX,mBAAA,MACI,KAAMC,QAAaD,mBAAAE,IAAbD,CAAU,GAAVA,CAA4BD,mBAAAG,IAC7BV,KAAA,CAAKQ,OAAL,CAAL,GACI,IAAAvB,eAAA0B,OAAA,CAA2BC,IAAAA,EAA3B,CAAsC,CAClCC,KAAMjC,OAAAkC,YAAAC,OAD4B,CAElCN,IAAKF,mBAAAG,IAF6B,CAGlCA,IAAKH,mBAAAE,IAH6B,CAAtC,CAKA,CAAAT,IAAA,CAAKQ,OAAL,CAAA,CAAgB,CAAA,CANpB,CAF4B,CAWhC,IAAAzB,MAAAiC,kBAAA,CAA6Bf,+BAA7B,CAdA,CAHqD,CAL1C,CA0BvBzB;OAAAK,eAAA,CAAyBA,MAtDmG;",
"sources":["node_modules/peer/dist/src/services/messagesExpire/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$peer$dist$src$services$messagesExpire$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enums_1 = require(\"../../enums\");\nclass MessagesExpire {\n    constructor({ realm, config, messageHandler }) {\n        this.timeoutId = null;\n        this.realm = realm;\n        this.config = config;\n        this.messageHandler = messageHandler;\n    }\n    startMessagesExpiration() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n        // Clean up outstanding messages\n        this.timeoutId = setTimeout(() => {\n            this.pruneOutstanding();\n            this.timeoutId = null;\n            this.startMessagesExpiration();\n        }, this.config.cleanup_out_msgs);\n    }\n    stopMessagesExpiration() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n    }\n    pruneOutstanding() {\n        const destinationClientsIds = this.realm.getClientsIdsWithQueue();\n        const now = new Date().getTime();\n        const maxDiff = this.config.expire_timeout;\n        const seen = {};\n        for (const destinationClientId of destinationClientsIds) {\n            const messageQueue = this.realm.getMessageQueueById(destinationClientId);\n            const lastReadDiff = now - messageQueue.getLastReadAt();\n            if (lastReadDiff < maxDiff)\n                continue;\n            const messages = messageQueue.getMessages();\n            for (const message of messages) {\n                const seenKey = `${message.src}_${message.dst}`;\n                if (!seen[seenKey]) {\n                    this.messageHandler.handle(undefined, {\n                        type: enums_1.MessageType.EXPIRE,\n                        src: message.dst,\n                        dst: message.src\n                    });\n                    seen[seenKey] = true;\n                }\n            }\n            this.realm.clearMessageQueue(destinationClientId);\n        }\n    }\n}\nexports.MessagesExpire = MessagesExpire;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","enums_1","MessagesExpire","constructor","realm","config","messageHandler","timeoutId","startMessagesExpiration","clearTimeout","setTimeout","pruneOutstanding","cleanup_out_msgs","stopMessagesExpiration","destinationClientsIds","getClientsIdsWithQueue","now","getTime","Date","maxDiff","expire_timeout","seen","destinationClientId","messageQueue","getMessageQueueById","getLastReadAt","messages","getMessages","message","seenKey","src","dst","handle","undefined","type","MessageType","EXPIRE","clearMessageQueue"]
}
