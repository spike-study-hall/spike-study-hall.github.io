{
"version":3,
"file":"module$node_modules$serve_static$index.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/serve-static/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$serve_static$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","createNotFoundDirectoryListener","notFound","error","createRedirectDirectoryListener","redirect","res","hasTrailingSlash","originalUrl","parseUrl","original","req","path","pathname","i","str","length","charCodeAt","substr","loc","encodeUrl","url","format","escapeHtml","statusCode","setHeader","Buffer","byteLength","doc","end","resolve","send","serveStatic","root","options","TypeError","opts","Object","create","fallthrough","setHeaders","maxage","maxAge","onDirectory","next","method","forwardError","stream","on","onFile","err","pipe","mime"]
}
