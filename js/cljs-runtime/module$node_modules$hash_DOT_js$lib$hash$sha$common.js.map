{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$sha$common.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBhHC,QAASA,MAAK,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAU,CACtB,MAAQF,EAAR,CAAYC,CAAZ,CAAkBD,CAAlB,CAAsBE,CAAtB,CAA4BD,CAA5B,CAAgCC,CADV,CAjBxB,IAAIC,OADQP,OAAAQ,CAAQ,gDAARA,CACCD,OAUbL,QAAAO,KAAA,CARAA,QAAa,CAACC,CAAD,CAAIN,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAa,CACxB,GAAU,CAAV,GAAII,CAAJ,CACE,MAAYN,EAAZ,CAAeC,CAAf,CASiB,CATLD,CAAZ,CAAkBE,CACpB,IAAU,CAAV,GAAII,CAAJ,EAAqB,CAArB,GAAeA,CAAf,CACE,MAAWN,EAAX,CAAcC,CAAd,CAAiBC,CACnB,IAAU,CAAV,GAAII,CAAJ,CACE,MAAOP,MAAA,CAAMC,CAAN,CAASC,CAAT,CAAYC,CAAZ,CANe,CAa1BJ,QAAAS,KAAA,CAHAA,QAAa,CAACP,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAU,CACrB,MAAQF,EAAR,CAAYC,CAAZ,CAAmB,CAACD,CAApB,CAAyBE,CADJ,CAQvBJ,QAAAC,MAAA,CAAgBA,KAKhBD,QAAAU,IAAA,CAHAA,QAAY,CAACR,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAU,CACpB,MAAOF,EAAP,CAAWC,CAAX,CAAeC,CADK,CAQtBJ,QAAAW,OAAA,CAHAA,QAAe,CAACT,CAAD,CAAI,CACjB,MAAOG,OAAA,CAAOH,CAAP,CAAU,CAAV,CAAP,CAAsBG,MAAA,CAAOH,CAAP;AAAU,EAAV,CAAtB,CAAsCG,MAAA,CAAOH,CAAP,CAAU,EAAV,CADrB,CAQnBF,QAAAY,OAAA,CAHAA,QAAe,CAACV,CAAD,CAAI,CACjB,MAAOG,OAAA,CAAOH,CAAP,CAAU,CAAV,CAAP,CAAsBG,MAAA,CAAOH,CAAP,CAAU,EAAV,CAAtB,CAAsCG,MAAA,CAAOH,CAAP,CAAU,EAAV,CADrB,CAQnBF,QAAAa,OAAA,CAHAA,QAAe,CAACX,CAAD,CAAI,CACjB,MAAOG,OAAA,CAAOH,CAAP,CAAU,CAAV,CAAP,CAAsBG,MAAA,CAAOH,CAAP,CAAU,EAAV,CAAtB,CAAuCA,CAAvC,GAA6C,CAD5B,CAQnBF,QAAAc,OAAA,CAHAA,QAAe,CAACZ,CAAD,CAAI,CACjB,MAAOG,OAAA,CAAOH,CAAP,CAAU,EAAV,CAAP,CAAuBG,MAAA,CAAOH,CAAP,CAAU,EAAV,CAAvB,CAAwCA,CAAxC,GAA8C,EAD7B,CA9C6F;",
"sources":["node_modules/hash_DOT_js/lib/hash/sha/common.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$sha$common\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n};"],
"names":["shadow$provide","global","require","module","exports","maj32","x","y","z","rotr32","utils","ft_1","s","ch32","p32","s0_256","s1_256","g0_256","g1_256"]
}
