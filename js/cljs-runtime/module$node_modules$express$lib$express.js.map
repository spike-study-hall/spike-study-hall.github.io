{
"version":3,
"file":"module$node_modules$express$lib$express.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAehGC,MAAAA,CAAaH,OAAA,CAAQ,uCAAR,CACjB,KAAII,aAAeJ,OAAA,CAAQ,mCAAR,CAAAI,aAAnB,CACIC,MAAQL,OAAA,CAAQ,6CAAR,CADZ,CAEIM,MAAQN,OAAA,CAAQ,6CAAR,CAFZ,CAGIO,MAAQP,OAAA,CAAQ,8CAAR,CAHZ,CAIIQ,OAASR,OAAA,CAAQ,8CAAR,CAJb,CAKIS,aAAMT,OAAA,CAAQ,yCAAR,CALV;AAMIU,aAAMV,OAAA,CAAQ,0CAAR,CAMVE,QAAA,CAAUD,MAAAC,QAAV,CASAS,QAA0B,EAAG,CAC3B,IAAIC,IAAMA,QAAQ,CAACH,GAAD,CAAMC,GAAN,CAAWG,IAAX,CAAiB,CACjCD,GAAAE,OAAA,CAAWL,GAAX,CAAgBC,GAAhB,CAAqBG,IAArB,CADiC,CAInCR,MAAA,CAAMO,GAAN,CAAWR,YAAAW,UAAX,CAAmC,CAAA,CAAnC,CACAV,MAAA,CAAMO,GAAN,CAAWN,KAAX,CAAkB,CAAA,CAAlB,CAGAM,IAAAI,QAAA,CAAcC,MAAAC,OAAA,CAAcT,YAAd,CAAmB,CAC/BG,IAAK,CAAEO,aAAc,CAAA,CAAhB,CAAsBC,WAAY,CAAA,CAAlC,CAAwCC,SAAU,CAAA,CAAlD,CAAwDC,MAAOV,GAA/D,CAD0B,CAAnB,CAKdA,IAAAW,SAAA,CAAeN,MAAAC,OAAA,CAAcR,YAAd,CAAmB,CAChCE,IAAK,CAAEO,aAAc,CAAA,CAAhB,CAAsBC,WAAY,CAAA,CAAlC,CAAwCC,SAAU,CAAA,CAAlD,CAAwDC,MAAOV,GAA/D,CAD2B,CAAnB,CAIfA,IAAAY,KAAA,EACA,OAAOZ,IAnBoB,CA0B7BV,QAAAuB,YAAA,CAAsBnB,KACtBJ,QAAAc,QAAA,CAAkBP,YAClBP,QAAAqB,SAAA;AAAmBb,YAMnBR,QAAAK,MAAA,CAAgBA,KAChBL,QAAAM,OAAA,CAAiBA,MAMjBN,QAAAwB,KAAA,CAAevB,MAAAuB,KACfxB,QAAAyB,MAAA,CAAgB3B,OAAA,CAAQ,kDAAR,CAChBE,QAAA0B,IAAA,CAAczB,MAAAyB,IACd1B,QAAA2B,OAAA,CAAiB7B,OAAA,CAAQ,wCAAR,CACjBE,QAAA4B,KAAA,CAAe3B,MAAA2B,KACf5B,QAAA6B,WAAA,CAAqB5B,MAAA4B,WAMIC,0KAAAA,MAAAA,CAAAA,GAAAA,CAoBzBC,QAAA,CAA2B,QAAS,CAACC,IAAD,CAAO,CACzCjB,MAAAkB,eAAA,CAAsBjC,OAAtB;AAA+BgC,IAA/B,CAAqC,CACnCE,IAAKA,QAAS,EAAG,CACf,KAAUC,MAAJ,CAAU,wBAAV,CAAqCH,IAArC,CAA4C,oIAA5C,CAAN,CADe,CADkB,CAInCf,aAAc,CAAA,CAJqB,CAArC,CADyC,CAA3C,CA7GoG;",
"sources":["node_modules/express/lib/express.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$express$lib$express\"] = function(global,require,module,exports) {\n/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","bodyParser","EventEmitter","mixin","proto","Route","Router","req","res","createApplication","app","next","handle","prototype","request","Object","create","configurable","enumerable","writable","value","response","init","application","json","query","raw","static","text","urlencoded","removedMiddlewares","forEach","name","defineProperty","get","Error"]
}
