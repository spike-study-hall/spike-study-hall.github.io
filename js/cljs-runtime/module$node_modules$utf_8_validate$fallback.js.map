{
"version":3,
"file":"module$node_modules$utf_8_validate$fallback.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8DxGD,MAAAC,QAAA,CAlDoBC,QAAA,CAACC,GAAD,CAAS,CAI3B,IAHA,IAAIC,IAAMD,GAAAE,OAAV,CACIC,EAAI,CAER,CAAOA,CAAP,CAAWF,GAAX,CAAA,CACE,GAAa,GAAb,CAAID,GAAA,CAAIG,CAAJ,CAAJ,CACEA,CAAA,EADF,KAEO,IAAwB,GAAxB,IAAKH,GAAA,CAAIG,CAAJ,CAAL,CAAc,GAAd,EAA8B,CACnC,GACEA,CADF,CACM,CADN,GACYF,GADZ,EAE0B,GAF1B,IAEGD,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CAFH,CAEgB,GAFhB,GAGsB,GAHtB,IAGGH,GAAA,CAAIG,CAAJ,CAHH,CAGY,GAHZ,EAKE,MAAO,CAAA,CAEPA,EAAA,EAAK,CAR4B,CAA9B,IAUA,IAAwB,GAAxB,IAAKH,GAAA,CAAIG,CAAJ,CAAL,CAAc,GAAd,EAA8B,CACnC,GACEA,CADF,CACM,CADN,EACWF,GADX,EAE0B,GAF1B,IAEGD,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CAFH,CAEgB,GAFhB,GAG0B,GAH1B,IAGGH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CAHH,CAGgB,GAHhB,GAIa,GAJb,GAIEH,GAAA,CAAIG,CAAJ,CAJF,EAI6C,GAJ7C,IAIsBH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CAJtB,CAImC,GAJnC,GAKa,GALb,GAKEH,GAAA,CAAIG,CAAJ,CALF,EAK6C,GAL7C,IAKsBH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CALtB,CAKmC,GALnC,EAOE,MAAO,CAAA,CAEPA,EAAA,EAAK,CAV4B,CAA9B,IAYA,IAAwB,GAAxB,IAAKH,GAAA,CAAIG,CAAJ,CAAL,CAAc,GAAd,EAA8B,CACnC,GACEA,CADF,CACM,CADN,EACWF,GADX,EAE0B,GAF1B,IAEGD,GAAA,CAAIG,CAAJ;AAAQ,CAAR,CAFH,CAEgB,GAFhB,GAG0B,GAH1B,IAGGH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CAHH,CAGgB,GAHhB,GAI0B,GAJ1B,IAIGH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CAJH,CAIgB,GAJhB,GAKa,GALb,GAKEH,GAAA,CAAIG,CAAJ,CALF,EAK6C,GAL7C,IAKsBH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CALtB,CAKmC,GALnC,GAMa,GANb,GAMEH,GAAA,CAAIG,CAAJ,CANF,EAMkC,GANlC,CAMqBH,GAAA,CAAIG,CAAJ,CAAQ,CAAR,CANrB,EAMmD,GANnD,CAM0CH,GAAA,CAAIG,CAAJ,CAN1C,CAQE,MAAO,CAAA,CAEPA,EAAA,EAAK,CAX4B,CAA9B,IAcL,OAAO,CAAA,CAIX,OAAO,CAAA,CA/CoB,CAZ2E;",
"sources":["node_modules/utf-8-validate/fallback.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$utf_8_validate$fallback\"] = function(global,require,module,exports) {\n'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nconst isValidUTF8 = (buf) => {\n  var len = buf.length;\n  var i = 0;\n\n  while (i < len) {\n    if (buf[i] < 0x80) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      } else {\n        i += 2;\n      }\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0     // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      } else {\n        i += 3;\n      }\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      } else {\n        i += 4;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = isValidUTF8;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isValidUTF8","buf","len","length","i"]
}
