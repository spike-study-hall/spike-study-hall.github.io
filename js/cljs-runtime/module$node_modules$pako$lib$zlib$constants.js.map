{
"version":3,
"file":"module$node_modules$pako$lib$zlib$constants.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsBxGD,MAAAC,QAAA,CAAiB,CAGfC,WAAoB,CAHL,CAIfC,gBAAoB,CAJL,CAKfC,aAAoB,CALL,CAMfC,aAAoB,CANL,CAOfC,SAAoB,CAPL,CAQfC,QAAoB,CARL,CASfC,QAAoB,CATL,CAcfC,KAAoB,CAdL,CAefC,aAAoB,CAfL,CAgBfC,YAAoB,CAhBL,CAiBfC,QAAmB,EAjBJ,CAkBfC,eAAmB,EAlBJ,CAmBfC,aAAmB,EAnBJ,CAqBfC,YAAmB,EArBJ,CAyBfC,iBAA0B,CAzBX,CA0BfC,aAA0B,CA1BX,CA2BfC,mBAA0B,CA3BX,CA4BfC,sBAAyB,EA5BV,CA+BfC,WAA0B,CA/BX,CAgCfC,eAA0B,CAhCX,CAiCfC,MAA0B,CAjCX,CAkCfC,QAA0B,CAlCX,CAmCfC,mBAA0B,CAnCX,CAsCfC,SAA0B,CAtCX,CAuCfC,OAA0B,CAvCX,CAyCfC,UAA0B,CAzCX,CA4CfC,WAA0B,CA5CX,CAtBuF;",
"sources":["node_modules/pako/lib/zlib/constants.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pako$lib$zlib$constants\"] = function(global,require,module,exports) {\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED"]
}
