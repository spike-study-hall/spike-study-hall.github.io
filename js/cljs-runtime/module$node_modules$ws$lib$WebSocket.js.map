{
"version":3,
"file":"module$node_modules$ws$lib$WebSocket.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/ws/lib/WebSocket.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ws$lib$WebSocket\"] = function(global,require,module,exports) {\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst Ultron = require('ultron');\nconst https = require('https');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./PerMessageDeflate');\nconst EventTarget = require('./EventTarget');\nconst Extensions = require('./Extensions');\nconst constants = require('./Constants');\nconst Receiver = require('./Receiver');\nconst Sender = require('./Sender');\n\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {String} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor (address, protocols, options) {\n    super();\n\n    if (!protocols) {\n      protocols = [];\n    } else if (typeof protocols === 'string') {\n      protocols = [protocols];\n    } else if (!Array.isArray(protocols)) {\n      options = protocols;\n      protocols = [];\n    }\n\n    this.readyState = WebSocket.CONNECTING;\n    this.bytesReceived = 0;\n    this.extensions = {};\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._finalize = this.finalize.bind(this);\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._finalized = false;\n    this._closeCode = 1006;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n    this._ultron = null;\n\n    if (Array.isArray(address)) {\n      initAsServerClient.call(this, address[0], address[1], options);\n    } else {\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING () { return WebSocket.CONNECTING; }\n  get CLOSING () { return WebSocket.CLOSING; }\n  get CLOSED () { return WebSocket.CLOSED; }\n  get OPEN () { return WebSocket.OPEN; }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount () {\n    var amount = 0;\n\n    if (this._socket) {\n      amount = this._socket.bufferSize + this._sender._bufferedBytes;\n    }\n    return amount;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType () {\n    return this._binaryType;\n  }\n\n  set binaryType (type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @private\n   */\n  setSocket (socket, head) {\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    this._receiver = new Receiver(this.extensions, this._maxPayload, this.binaryType);\n    this._sender = new Sender(socket, this.extensions);\n    this._ultron = new Ultron(socket);\n    this._socket = socket;\n\n    this._ultron.on('close', this._finalize);\n    this._ultron.on('error', this._finalize);\n    this._ultron.on('end', this._finalize);\n\n    if (head.length > 0) socket.unshift(head);\n\n    this._ultron.on('data', (data) => {\n      this.bytesReceived += data.length;\n      this._receiver.add(data);\n    });\n\n    this._receiver.onmessage = (data) => this.emit('message', data);\n    this._receiver.onping = (data) => {\n      this.pong(data, !this._isServer, true);\n      this.emit('ping', data);\n    };\n    this._receiver.onpong = (data) => this.emit('pong', data);\n    this._receiver.onclose = (code, reason) => {\n      this._closeFrameReceived = true;\n      this._closeMessage = reason;\n      this._closeCode = code;\n      if (!this._finalized) this.close(code, reason);\n    };\n    this._receiver.onerror = (error, code) => {\n      this._closeMessage = '';\n      this._closeCode = code;\n\n      //\n      // Ensure that the error is emitted even if `WebSocket#finalize()` has\n      // already been called.\n      //\n      this.readyState = WebSocket.CLOSING;\n      this.emit('error', error);\n      this.finalize(true);\n    };\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Clean up and release internal resources.\n   *\n   * @param {(Boolean|Error)} error Indicates whether or not an error occurred\n   * @private\n   */\n  finalize (error) {\n    if (this._finalized) return;\n\n    this.readyState = WebSocket.CLOSING;\n    this._finalized = true;\n\n    if (typeof error === 'object') this.emit('error', error);\n    if (!this._socket) return this.emitClose();\n\n    clearTimeout(this._closeTimer);\n    this._closeTimer = null;\n\n    this._ultron.destroy();\n    this._ultron = null;\n\n    this._socket.on('error', constants.NOOP);\n\n    if (!error) this._socket.end();\n    else this._socket.destroy();\n\n    this._socket = null;\n    this._sender = null;\n\n    this._receiver.cleanup(() => this.emitClose());\n    this._receiver = null;\n  }\n\n  /**\n   * Emit the `close` event.\n   *\n   * @private\n   */\n  emitClose () {\n    this.readyState = WebSocket.CLOSED;\n\n    this.emit('close', this._closeCode, this._closeMessage);\n\n    if (this.extensions[PerMessageDeflate.extensionName]) {\n      this.extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this.extensions = null;\n\n    this.removeAllListeners();\n  }\n\n  /**\n   * Pause the socket stream.\n   *\n   * @public\n   */\n  pause () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.pause();\n  }\n\n  /**\n   * Resume the socket stream\n   *\n   * @public\n   */\n  resume () {\n    if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n    this._socket.resume();\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *            +----------+     +-----------+   +----------+\n   *     + - - -|ws.close()|----\u003e|close frame|--\u003e|ws.close()|- - - -\n   *            +----------+     +-----------+   +----------+       |\n   *     |      +----------+     +-----------+         |\n   *            |ws.close()|<----|close frame|<--------+            |\n   *            +----------+     +-----------+         |\n   *  CLOSING         |              +---+             |         CLOSING\n   *                  |          +---|fin|<------------+\n   *     |            |          |   +---+                          |\n   *                  |          |   +---+      +-------------+\n   *     |            +----------+--\u003e|fin|-----\u003e|ws.finalize()| - - +\n   *                             |   +---+      +-------------+\n   *     |     +-------------+   |\n   *      - - -|ws.finalize()|<--+\n   *           +-------------+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close (code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      this._req.abort();\n      this.finalize(new Error('closed before the connection is established'));\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (!this._finalized) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is cleaned up even when the closing\n        // handshake fails.\n        //\n        this._closeTimer = setTimeout(this._finalize, closeTimeout, true);\n      }\n    });\n  }\n\n  /**\n   * Send a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  ping (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Boolean} failSilently Indicates whether or not to throw if `readyState` isn't `OPEN`\n   * @public\n   */\n  pong (data, mask, failSilently) {\n    if (this.readyState !== WebSocket.OPEN) {\n      if (failSilently) return;\n      throw new Error('not opened');\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send (data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      if (cb) cb(new Error('not opened'));\n      else throw new Error('not opened');\n      return;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign({\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true\n    }, options);\n\n    if (!this.extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate () {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      this._req.abort();\n      this.finalize(new Error('closed before the connection is established'));\n      return;\n    }\n\n    this.finalize(true);\n  }\n}\n\nWebSocket.CONNECTING = 0;\nWebSocket.OPEN = 1;\nWebSocket.CLOSING = 2;\nWebSocket.CLOSED = 3;\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get () {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set (listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket server client.\n *\n * @param {http.IncomingMessage} req The request object\n * @param {net.Socket} socket The network socket between the server and client\n * @param {Buffer} head The first packet of the upgraded stream\n * @param {Object} options WebSocket attributes\n * @param {Number} options.protocolVersion The WebSocket protocol version\n * @param {Object} options.extensions The negotiated extensions\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {String} options.protocol The chosen subprotocol\n * @private\n */\nfunction initAsServerClient (socket, head, options) {\n  this.protocolVersion = options.protocolVersion;\n  this._maxPayload = options.maxPayload;\n  this.extensions = options.extensions;\n  this.protocol = options.protocol;\n\n  this._isServer = true;\n\n  this.setSocket(socket, head);\n}\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {String} address The URL to which to connect\n * @param {String[]} protocols The list of subprotocols\n * @param {Object} options Connection options\n * @param {String} options.protocol Value of the `Sec-WebSocket-Protocol` header\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {String} options.localAddress Local interface to bind for network connections\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {Object} options.headers An object containing request headers\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @param {http.Agent} options.agent Use the specified Agent\n * @param {String} options.host Value of the `Host` header\n * @param {Number} options.family IP address family to use during hostname lookup (4 or 6).\n * @param {Function} options.checkServerIdentity A function to validate the server hostname\n * @param {Boolean} options.rejectUnauthorized Verify or not the server certificate\n * @param {String} options.passphrase The passphrase for the private key or pfx\n * @param {String} options.ciphers The ciphers to use or exclude\n * @param {String} options.ecdhCurve The curves for ECDH key agreement to use or exclude\n * @param {(String|String[]|Buffer|Buffer[])} options.cert The certificate key\n * @param {(String|String[]|Buffer|Buffer[])} options.key The private key\n * @param {(String|Buffer)} options.pfx The private key, certificate, and CA certs\n * @param {(String|String[]|Buffer|Buffer[])} options.ca Trusted certificates\n * @private\n */\nfunction initAsClient (address, protocols, options) {\n  options = Object.assign({\n    protocolVersion: protocolVersions[1],\n    protocol: protocols.join(','),\n    perMessageDeflate: true,\n    handshakeTimeout: null,\n    localAddress: null,\n    headers: null,\n    family: null,\n    origin: null,\n    agent: null,\n    host: null,\n\n    //\n    // SSL options.\n    //\n    checkServerIdentity: null,\n    rejectUnauthorized: null,\n    passphrase: null,\n    ciphers: null,\n    ecdhCurve: null,\n    cert: null,\n    key: null,\n    pfx: null,\n    ca: null\n  }, options);\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new Error(\n      `unsupported protocol version: ${options.protocolVersion} ` +\n      `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this.protocolVersion = options.protocolVersion;\n  this._isServer = false;\n  this.url = address;\n\n  const serverUrl = url.parse(address);\n  const isUnixSocket = serverUrl.protocol === 'ws+unix:';\n\n  if (!serverUrl.host && (!isUnixSocket || !serverUrl.path)) {\n    throw new Error('invalid url');\n  }\n\n  const isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  var perMessageDeflate;\n\n  const requestOptions = {\n    port: serverUrl.port || (isSecure ? 443 : 80),\n    host: serverUrl.hostname,\n    path: '/',\n    headers: {\n      'Sec-WebSocket-Version': options.protocolVersion,\n      'Sec-WebSocket-Key': key,\n      'Connection': 'Upgrade',\n      'Upgrade': 'websocket'\n    }\n  };\n\n  if (options.headers) Object.assign(requestOptions.headers, options.headers);\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false\n    );\n    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (options.protocol) {\n    requestOptions.headers['Sec-WebSocket-Protocol'] = options.protocol;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      requestOptions.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      requestOptions.headers.Origin = options.origin;\n    }\n  }\n  if (options.host) requestOptions.headers.Host = options.host;\n  if (serverUrl.auth) requestOptions.auth = serverUrl.auth;\n\n  if (options.localAddress) requestOptions.localAddress = options.localAddress;\n  if (options.family) requestOptions.family = options.family;\n\n  if (isUnixSocket) {\n    const parts = serverUrl.path.split(':');\n\n    requestOptions.socketPath = parts[0];\n    requestOptions.path = parts[1];\n  } else if (serverUrl.path) {\n    //\n    // Make sure that path starts with `/`.\n    //\n    if (serverUrl.path.charAt(0) !== '/') {\n      requestOptions.path = `/${serverUrl.path}`;\n    } else {\n      requestOptions.path = serverUrl.path;\n    }\n  }\n\n  var agent = options.agent;\n\n  //\n  // A custom agent is required for these options.\n  //\n  if (\n    options.rejectUnauthorized != null ||\n    options.checkServerIdentity ||\n    options.passphrase ||\n    options.ciphers ||\n    options.ecdhCurve ||\n    options.cert ||\n    options.key ||\n    options.pfx ||\n    options.ca\n  ) {\n    if (options.passphrase) requestOptions.passphrase = options.passphrase;\n    if (options.ciphers) requestOptions.ciphers = options.ciphers;\n    if (options.ecdhCurve) requestOptions.ecdhCurve = options.ecdhCurve;\n    if (options.cert) requestOptions.cert = options.cert;\n    if (options.key) requestOptions.key = options.key;\n    if (options.pfx) requestOptions.pfx = options.pfx;\n    if (options.ca) requestOptions.ca = options.ca;\n    if (options.checkServerIdentity) {\n      requestOptions.checkServerIdentity = options.checkServerIdentity;\n    }\n    if (options.rejectUnauthorized != null) {\n      requestOptions.rejectUnauthorized = options.rejectUnauthorized;\n    }\n\n    if (!agent) agent = new httpObj.Agent(requestOptions);\n  }\n\n  if (agent) requestOptions.agent = agent;\n\n  this._req = httpObj.get(requestOptions);\n\n  if (options.handshakeTimeout) {\n    this._req.setTimeout(options.handshakeTimeout, () => {\n      this._req.abort();\n      this.finalize(new Error('opening handshake has timed out'));\n    });\n  }\n\n  this._req.on('error', (error) => {\n    if (this._req.aborted) return;\n\n    this._req = null;\n    this.finalize(error);\n  });\n\n  this._req.on('response', (res) => {\n    if (!this.emit('unexpected-response', this._req, res)) {\n      this._req.abort();\n      this.finalize(new Error(`unexpected server response (${res.statusCode})`));\n    }\n  });\n\n  this._req.on('upgrade', (res, socket, head) => {\n    this.emit('headers', res.headers, res);\n\n    //\n    // The user may have closed the connection from a listener of the `headers`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    this._req = null;\n\n    const digest = crypto.createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      socket.destroy();\n      return this.finalize(new Error('invalid server key'));\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (options.protocol || '').split(/, */);\n    var protError;\n\n    if (!options.protocol && serverProt) {\n      protError = 'server sent a subprotocol even though none requested';\n    } else if (options.protocol && !serverProt) {\n      protError = 'server sent no subprotocol even though requested';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'server responded with an invalid protocol';\n    }\n\n    if (protError) {\n      socket.destroy();\n      return this.finalize(new Error(protError));\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const serverExtensions = Extensions.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (serverExtensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(\n            serverExtensions[PerMessageDeflate.extensionName]\n          );\n          this.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        socket.destroy();\n        this.finalize(new Error('invalid Sec-WebSocket-Extensions header'));\n        return;\n      }\n    }\n\n    this.setSocket(socket, head);\n  });\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","initAsServerClient","socket","head","options","protocolVersion","_maxPayload","maxPayload","extensions","protocol","_isServer","setSocket","initAsClient","address","protocols","Object","assign","protocolVersions","join","perMessageDeflate","handshakeTimeout","localAddress","headers","family","origin","agent","host","checkServerIdentity","rejectUnauthorized","passphrase","ciphers","ecdhCurve","cert","key","pfx","ca","indexOf","Error","url","serverUrl","parse","isUnixSocket","path","isSecure","crypto","randomBytes","toString","httpObj","https","http","requestOptions","port","hostname","PerMessageDeflate","Extensions","format","extensionName","offer","Origin","Host","auth","parts","split","socketPath","charAt","Agent","_req","get","setTimeout","abort","finalize","on","error","aborted","res","emit","statusCode","readyState","WebSocket","CONNECTING","digest","createHash","update","constants","GUID","destroy","serverProt","protList","protError","serverExtensions","accept","err","EventEmitter","Ultron","EventTarget","Receiver","Sender","constructor","Array","isArray","bytesReceived","_binaryType","BINARY_TYPES","_finalize","bind","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_finalized","_closeCode","_receiver","_sender","_socket","_ultron","call","setNoDelay","binaryType","length","unshift","data","add","onmessage","this._receiver.onmessage","onping","this._receiver.onping","pong","onpong","this._receiver.onpong","onclose","this._receiver.onclose","code","reason","close","onerror","this._receiver.onerror","CLOSING","OPEN","emitClose","clearTimeout","NOOP","end","cleanup","CLOSED","removeAllListeners","pause","resume","closeTimeout","ping","mask","failSilently","undefined","EMPTY_BUFFER","send","cb","opts","binary","compress","fin","terminate","bufferedAmount","amount","bufferSize","_bufferedBytes","type","forEach","method","defineProperty","prototype","listeners","i","_listener","set","listener","removeListener","addEventListener","removeEventListener"]
}
